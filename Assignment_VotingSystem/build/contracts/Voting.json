{
  "contractName": "Voting",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_proxyRegistryAddress",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "baseTokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "baseURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "candidates",
      "outputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "voteCount",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "chairperson",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "electionName",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        }
      ],
      "name": "mintTo",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalVotes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "voters",
      "outputs": [
        {
          "internalType": "bool",
          "name": "authorized",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "voted",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "vote",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        }
      ],
      "name": "Election",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        }
      ],
      "name": "addCandidate",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_person",
          "type": "address"
        }
      ],
      "name": "authorize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_voteIndex",
          "type": "uint256"
        }
      ],
      "name": "vote",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "voteCount",
              "type": "uint256"
            }
          ],
          "internalType": "struct Voting.Candidate",
          "name": "candidatesInit",
          "type": "tuple"
        },
        {
          "internalType": "string",
          "name": "electionNameInit",
          "type": "string"
        }
      ],
      "name": "mintVoting",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_proxyRegistryAddress\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"}],\"name\":\"Election\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"}],\"name\":\"addCandidate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_person\",\"type\":\"address\"}],\"name\":\"authorize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"baseTokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"baseURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"candidates\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"voteCount\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"chairperson\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"electionName\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"mintTo\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"voteCount\",\"type\":\"uint256\"}],\"internalType\":\"struct Voting.Candidate\",\"name\":\"candidatesInit\",\"type\":\"tuple\"},{\"internalType\":\"string\",\"name\":\"electionNameInit\",\"type\":\"string\"}],\"name\":\"mintVoting\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_voteIndex\",\"type\":\"uint256\"}],\"name\":\"vote\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"voters\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"authorized\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"voted\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"vote\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"approve(address,uint256)\":{\"details\":\"Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.\",\"params\":{\"to\":\"address to be approved for the given token ID\",\"tokenId\":\"uint256 ID of the token to be approved\"}},\"balanceOf(address)\":{\"details\":\"Gets the balance of the specified address.\",\"params\":{\"owner\":\"address to query the balance of\"},\"return\":\"uint256 representing the amount owned by the passed address\"},\"baseURI()\":{\"details\":\"Returns the base URI set via {_setBaseURI}. This will be automatically added as a preffix in {tokenURI} to each token's URI, when they are non-empty.    * _Available since v2.5.0._\"},\"getApproved(uint256)\":{\"details\":\"Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the approval of\"},\"return\":\"address currently approved for the given token ID\"},\"isApprovedForAll(address,address)\":{\"details\":\"Tells whether an operator is approved by a given owner.\",\"params\":{\"operator\":\"operator address which you want to query the approval of\",\"owner\":\"owner address which you want to query the approval of\"},\"return\":\"bool whether the given operator is approved by the given owner\"},\"isOwner()\":{\"details\":\"Returns true if the caller is the current owner.\"},\"mintTo(address)\":{\"details\":\"Mints a token to an address with a tokenURI.\",\"params\":{\"_to\":\"address of the future owner of the token\"}},\"name()\":{\"details\":\"Gets the token name.\",\"return\":\"string representing the token name\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerOf(uint256)\":{\"details\":\"Gets the owner of the specified token ID.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the owner of\"},\"return\":\"address currently marked as the owner of the given token ID\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator\",\"params\":{\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted. Requires the _msgSender() to be the owner, approved, or operator\",\"params\":{\"_data\":\"bytes data to send along with a safe transfer check\",\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"setApprovalForAll(address,bool)\":{\"details\":\"Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf.\",\"params\":{\"approved\":\"representing the status of the approval to be set\",\"to\":\"operator address to set the approval\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.     * Time complexity O(1), guaranteed to always use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Gets the token symbol.\",\"return\":\"string representing the token symbol\"},\"tokenByIndex(uint256)\":{\"details\":\"Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens.\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the tokens list\"},\"return\":\"uint256 token ID at the given index of the tokens list\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Gets the token ID at a given index of the tokens list of the requested owner.\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the requested tokens list\",\"owner\":\"address owning the tokens list to be accessed\"},\"return\":\"uint256 token ID at the given index of the tokens list owned by the requested address\"},\"totalSupply()\":{\"details\":\"Gets the total amount of tokens stored by the contract.\",\"return\":\"uint256 representing the total amount of tokens\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers the ownership of a given token ID to another address. Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requires the msg.sender to be the owner, approved, or operator.\",\"params\":{\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/C/Users/Patterson Thamba/Documents/Assignment_VotingSystem/contracts/Voting.sol\":\"Voting\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/C/Users/Patterson Thamba/Documents/Assignment_VotingSystem/contracts/ERC721Token.sol\":{\"keccak256\":\"0xc6715c9dd3dc24dd79de3e0e74315da4d216b3a16213c05dc1cd694ff51d75a8\",\"urls\":[\"bzz-raw://44d7136056a1951d9809b770d0bd3ab83f1cd60e01d90fab66f8e98b9bb5706c\",\"dweb:/ipfs/QmV5YgW1WuNdGaRz1M6z62HAFhP37H4YcLMnURu7kxPJUw\"]},\"/C/Users/Patterson Thamba/Documents/Assignment_VotingSystem/contracts/Strings.sol\":{\"keccak256\":\"0xc02bdf2c1aa60d23422522b61974f08915cbbfe9ef44b9542127607740dcae82\",\"urls\":[\"bzz-raw://16a3f7c9e81d59b13ee315f426927327a9df70b5cad2eff6222c565d9f31399a\",\"dweb:/ipfs/QmQLpbDfgdYHBhTRaPz1NgJw5nqcSveCw6EaYmwNviAJgx\"]},\"/C/Users/Patterson Thamba/Documents/Assignment_VotingSystem/contracts/Voting.sol\":{\"keccak256\":\"0x4b5fb24fa9857a844314e90a15d33d203838511e842f07a4dc64226a76f413f3\",\"urls\":[\"bzz-raw://1bb627068c410a513591ad2fc74599474ec70c953e1048428b058693782126ce\",\"dweb:/ipfs/QmPsiT3R54f1vbEz53YRE4RFqeagoHgFkQ9z5Df29TuTTx\"]},\"@openzeppelin/contracts/GSN/Context.sol\":{\"keccak256\":\"0x90a3995645af7562d84b9d69363ffa5ae7217714ab61e951bf7bc450f40e4061\",\"urls\":[\"bzz-raw://216ef9d6b614db4eb46970b4e84903f2534a45572dd30a79f0041f1a5830f436\",\"dweb:/ipfs/QmNPrJ4MWKUAWzKXpUqeyKRUfosaoANZAqXgvepdrCwZAG\"]},\"@openzeppelin/contracts/drafts/Counters.sol\":{\"keccak256\":\"0x5be8533c5950173dc2b77b75108fae6e6c5449aedadde3385ba457394aad2384\",\"urls\":[\"bzz-raw://d429fb04f5b31d909dc759d0f88e28055b80b4dd43e5def4dffc947fa0609229\",\"dweb:/ipfs/QmaY9idX5CwLLtjjTQAdiiaDSrncgafkatUZXTbbajpz8b\"]},\"@openzeppelin/contracts/introspection/ERC165.sol\":{\"keccak256\":\"0x01aedbf24e121a744262e04c7815b2a4c8ce604dee4829c5cff00943a594ccf3\",\"urls\":[\"bzz-raw://999ab32a6498d8ad8db61d47c3774aae2ff919acceebe2aeb50879bef62642c3\",\"dweb:/ipfs/QmephAYF5hoymu9qCFK6mURM2kZJCxU4ntUb4KTf1miVPT\"]},\"@openzeppelin/contracts/introspection/IERC165.sol\":{\"keccak256\":\"0xe0ed10f53955c35eecb02724538650a155aa940be3f0a54cd3bde6c6b0c6e48c\",\"urls\":[\"bzz-raw://7dcfda88e3225987245908c3296f3559752647036804325ebfaa9fd1545161c3\",\"dweb:/ipfs/QmXxx5rHfLL57zdgyyyG9MMv4XGN7bpVSc2MuDcaCgto6u\"]},\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x640b6dee7a4b830bdfd52b5031a07fc2b12209f5b2e29e5d364a7d37f69d8076\",\"urls\":[\"bzz-raw://31113152e1ddb78fe7a4197f247591ca894e93f916867beb708d8e747b6cc74f\",\"dweb:/ipfs/QmbZaJyXdpsYGykVhHH9qpVGQg9DGCxE2QufbCUy3daTgq\"]},\"@openzeppelin/contracts/ownership/Ownable.sol\":{\"keccak256\":\"0x6fb9d7889769d7cc161225f9ef7a90e468ba9788b253816f8d8b6894d3472c24\",\"urls\":[\"bzz-raw://cf4c00fc3c37cc5acf0c82ec6fd97bab67d72c2567fdc0ebf023d9c09b30a08e\",\"dweb:/ipfs/Qmb7TChG6DsEDX7LooJ4vmxot19f7VXX8S1zUGPeJTWbwZ\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x1a1c02bc2487c763ad240f6b6440ec9dcb84870879aea3ed2a6b9cd300b637c7\",\"urls\":[\"bzz-raw://e6351696020fecf1c1b09437a2961cbdc3e1579238a9573b8577b58af463eeb6\",\"dweb:/ipfs/QmTg7UxUcuENko38JL2Pb2aqXkWgqW1xPDbJwmfo3RVrrV\"]},\"@openzeppelin/contracts/token/ERC721/ERC721Enumerable.sol\":{\"keccak256\":\"0x28f4e41b86db783cd8daf9fdec839ce5930332b60f6dc9ac4992dfb584997e79\",\"urls\":[\"bzz-raw://6f1b545ec9e1f0284e86ddd4ffff353e1ab5e026bbbfaa2a5d2d791c39d7afd7\",\"dweb:/ipfs/Qmf9rVfj6LreiE7NHkkT1S7eLbSQDDY1gKd9XWERx2AN7W\"]},\"@openzeppelin/contracts/token/ERC721/ERC721Full.sol\":{\"keccak256\":\"0x307231237999e19b618a03e7ecff1cee2a189dd019ebd203e5e43a63a7ac8aa3\",\"urls\":[\"bzz-raw://9a169446f024a24c3e5146cbeefea6be3bbbe9ba836f98f9d0c64af9f10773c4\",\"dweb:/ipfs/QmWibincTepM31suKeF6bd3shbPGjc9E7uULaXQBY1eNX5\"]},\"@openzeppelin/contracts/token/ERC721/ERC721Metadata.sol\":{\"keccak256\":\"0xe454aab4894511c610fb28e63e212608004921c10dfbffaf0b0e18a2c3b204eb\",\"urls\":[\"bzz-raw://cbb33c4aa1ba8470e389a79702b1b0450c03acd0e9471ed3ae5d566a958d36a4\",\"dweb:/ipfs/QmXryp8Ncftr8WYt7vWwoFQVKnbxtQ7dQBHzfzgWWYGisK\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x680c11bc8173eef7d5db843baaf64ce499476de2c172f6aea631dbee54bcd2e6\",\"urls\":[\"bzz-raw://0f314963ab26fb65c6f364d57900f0f1aa8f6aeb4396e327e5e5c646815f060e\",\"dweb:/ipfs/Qmf6eSUtRUF4YDxGyhQq7TVDYzuHcYEvk9Us3RVy5iZQVH\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Enumerable.sol\":{\"keccak256\":\"0x5c573acd6c7b98d71f3c1c44d63dc17400b0fd7b26a52c9fded43b8b533dc4ec\",\"urls\":[\"bzz-raw://e23af54444d2dbfae58895339eb7b189e1ba5d0b7abde63716e7ef7da23b2fde\",\"dweb:/ipfs/QmZva7dE1SMd1yyizzc6ivSoBXXwpNveLV7iFNATNpq68Y\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Metadata.sol\":{\"keccak256\":\"0x2b2b99dc7fe8fcd1f9427d00822b99cbc683dc21f5dd7532bd7e2281fd2c2ca2\",\"urls\":[\"bzz-raw://a8024c00e34efaf328f9592e76823c79f25fa0f6006bdf4a1e7fea204afd4773\",\"dweb:/ipfs/QmZns9jTr7843njq3J2iL2LLoWXK5mdzN1bDGd9GL3ahhD\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x042048c375daca04b31e31c91bbae912b84b5eb818c4e31b2deb530fd2305342\",\"urls\":[\"bzz-raw://d877a87c5e29b9ffca3e334378058c051a4e012fd3635039681003a9376baf1f\",\"dweb:/ipfs/QmR45snf93cFXtB71TZcmoGy9DbcMha8CqgkDKaLvhjXZK\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x1a8e5072509c5ea7365eb1d48030b9be865140c8fb779968da0a459a0e174a11\",\"urls\":[\"bzz-raw://03335b7b07c7c8c8d613cfdd8ec39a0b5ec133ee510bf2fe6cc5a496767bef4b\",\"dweb:/ipfs/Qmebp4nzPja645c9yXSdJkGq96oU3am3LUnG2K3R7XxyKf\"]}},\"version\":1}",
  "bytecode": "0x60806040526000600f553480156200001657600080fd5b50604051620045f9380380620045f983398181016040526200003c919081019062000426565b6040518060400160405280600981526020017f566f7465546f6b656e00000000000000000000000000000000000000000000008152506040518060400160405280600381526020017f56544b00000000000000000000000000000000000000000000000000000000008152508282828181620000c56301ffc9a760e01b6200028060201b60201c565b620000dd6380ac58cd60e01b6200028060201b60201c565b620000f563780e9d6360e01b6200028060201b60201c565b81600990805190602001906200010d92919062000360565b5080600a90805190602001906200012692919062000360565b506200013f635b5e139f60e01b6200028060201b60201c565b505050506000620001556200035860201b60201c565b905080600d60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35080600e60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505033601060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000515565b63ffffffff60e01b817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161415620002ec576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620002e39062000494565b60405180910390fd5b6001600080837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b600033905090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620003a357805160ff1916838001178555620003d4565b82800160010185558215620003d4579182015b82811115620003d3578251825591602001919060010190620003b6565b5b509050620003e39190620003e7565b5090565b6200040c91905b8082111562000408576000816000905550600101620003ee565b5090565b90565b6000815190506200042081620004fb565b92915050565b6000602082840312156200043957600080fd5b600062000449848285016200040f565b91505092915050565b600062000461601c83620004b6565b91507f4552433136353a20696e76616c696420696e74657266616365206964000000006000830152602082019050919050565b60006020820190508181036000830152620004af8162000452565b9050919050565b600082825260208201905092915050565b6000620004d482620004db565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6200050681620004c7565b81146200051257600080fd5b50565b6140d480620005256000396000f3fe608060405234801561001057600080fd5b50600436106101fb5760003560e01c806370a082311161011a578063a3ec138d116100ad578063d3d699061161007c578063d3d69906146105c7578063d547cfb7146105e3578063e985e9c514610601578063f2fde38b14610631578063f34f5f451461064d576101fb565b8063a3ec138d1461052d578063b6a5d7de1461055f578063b88d4fde1461057b578063c87b56dd14610597576101fb565b80638da5cb5b116100e95780638da5cb5b146104b75780638f32d59b146104d557806395d89b41146104f3578063a22cb46514610511576101fb565b806370a0823114610443578063715018a614610473578063755edd171461047d57806385e8e7a714610499576101fb565b80632e4176cf11610192578063462e91ec11610161578063462e91ec146103a95780634f6ccce7146103c55780636352211e146103f55780636c0360eb14610425576101fb565b80632e4176cf1461030e5780632f745c591461032c5780633477ee2e1461035c57806342842e0e1461038d576101fb565b8063095ea7b3116101ce578063095ea7b31461029a5780630d15fd77146102b657806318160ddd146102d457806323b872dd146102f2576101fb565b80630121b93f1461020057806301ffc9a71461021c57806306fdde031461024c578063081812fc1461026a575b600080fd5b61021a600480360361021591908101906131c9565b610669565b005b610236600480360361023191908101906130ca565b61086b565b6040516102439190613adc565b60405180910390f35b6102546108d2565b6040516102619190613b50565b60405180910390f35b610284600480360361027f91908101906131c9565b610974565b6040516102919190613a75565b60405180910390f35b6102b460048036036102af919081019061308e565b6109f9565b005b6102be610bb4565b6040516102cb9190613e42565b60405180910390f35b6102dc610bba565b6040516102e99190613e42565b60405180910390f35b61030c60048036036103079190810190612f88565b610bc7565b005b610316610c27565b6040516103239190613a75565b60405180910390f35b6103466004803603610341919081019061308e565b610c4d565b6040516103539190613e42565b60405180910390f35b610376600480360361037191908101906131c9565b610cf6565b604051610384929190613b72565b60405180910390f35b6103a760048036036103a29190810190612f88565b610dbf565b005b6103c360048036036103be919081019061311c565b610ddf565b005b6103df60048036036103da91908101906131c9565b610edf565b6040516103ec9190613e42565b60405180910390f35b61040f600480360361040a91908101906131c9565b610f49565b60405161041c9190613a75565b60405180910390f35b61042d610ffb565b60405161043a9190613b50565b60405180910390f35b61045d60048036036104589190810190612f23565b61109d565b60405161046a9190613e42565b60405180910390f35b61047b61115c565b005b61049760048036036104929190810190612f23565b611264565b005b6104a16112cd565b6040516104ae9190613b2e565b60405180910390f35b6104bf61136b565b6040516104cc9190613a75565b60405180910390f35b6104dd611395565b6040516104ea9190613adc565b60405180910390f35b6104fb6113f4565b6040516105089190613b50565b60405180910390f35b61052b60048036036105269190810190613052565b611496565b005b61054760048036036105429190810190612f23565b611617565b60405161055693929190613af7565b60405180910390f35b61057960048036036105749190810190612f23565b61165b565b005b61059560048036036105909190810190612fd7565b611749565b005b6105b160048036036105ac91908101906131c9565b6117ab565b6040516105be9190613b50565b60405180910390f35b6105e160048036036105dc919081019061315d565b6117cd565b005b6105eb611849565b6040516105f89190613b50565b60405180910390f35b61061b60048036036106169190810190612f4c565b611860565b6040516106289190613adc565b60405180910390f35b61064b60048036036106469190810190612f23565b6118f4565b005b6106676004803603610662919081019061311c565b611947565b005b601260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160019054906101000a900460ff16156106f9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106f090613cc2565b60405180910390fd5b601260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff16610788576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161077f90613d42565b60405180910390fd5b80601260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819055506001601260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160016101000a81548160ff02191690831515021790555060016013828154811061083957fe5b906000526020600020906002020160010160008282540192505081905550600160146000828254019250508190555050565b6000806000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b606060098054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561096a5780601f1061093f5761010080835404028352916020019161096a565b820191906000526020600020905b81548152906001019060200180831161094d57829003601f168201915b5050505050905090565b600061097f826119a2565b6109be576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109b590613d82565b60405180910390fd5b6002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000610a0482610f49565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610a75576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a6c90613de2565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16610a94611a14565b73ffffffffffffffffffffffffffffffffffffffff161480610ac35750610ac281610abd611a14565b611860565b5b610b02576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610af990613ce2565b60405180910390fd5b826002600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b60145481565b6000600780549050905090565b610bd8610bd2611a14565b82611a1c565b610c17576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c0e90613e02565b60405180910390fd5b610c22838383611afa565b505050565b601060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000610c588361109d565b8210610c99576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c9090613ba2565b60405180910390fd5b600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208281548110610ce357fe5b9060005260206000200154905092915050565b60138181548110610d0357fe5b9060005260206000209060020201600091509050806000018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610daf5780601f10610d8457610100808354040283529160200191610daf565b820191906000526020600020905b815481529060010190602001808311610d9257829003601f168201915b5050505050908060010154905082565b610dda83838360405180602001604052806000815250611749565b505050565b601060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610e6f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e6690613c42565b60405180910390fd5b601360405180604001604052808381526020016000815250908060018154018082558091505090600182039060005260206000209060020201600090919290919091506000820151816000019080519060200190610ece929190612c09565b506020820151816001015550505050565b6000610ee9610bba565b8210610f2a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f2190613e22565b60405180910390fd5b60078281548110610f3757fe5b90600052602060002001549050919050565b6000806001600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610ff2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fe990613d22565b60405180910390fd5b80915050919050565b6060600b8054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156110935780601f1061106857610100808354040283529160200191611093565b820191906000526020600020905b81548152906001019060200180831161107657829003601f168201915b5050505050905090565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561110e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161110590613d02565b60405180910390fd5b611155600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020611b1e565b9050919050565b611164611395565b6111a3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161119a90613da2565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36000600d60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b61126c611395565b6112ab576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112a290613da2565b60405180910390fd5b60006112b5611b2c565b90506112c18282611b49565b6112c9611b6a565b5050565b60118054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156113635780601f1061133857610100808354040283529160200191611363565b820191906000526020600020905b81548152906001019060200180831161134657829003601f168201915b505050505081565b6000600d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166113d8611a14565b73ffffffffffffffffffffffffffffffffffffffff1614905090565b6060600a8054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561148c5780601f106114615761010080835404028352916020019161148c565b820191906000526020600020905b81548152906001019060200180831161146f57829003601f168201915b5050505050905090565b61149e611a14565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561150c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161150390613c82565b60405180910390fd5b8060046000611519611a14565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff166115c6611a14565b73ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c318360405161160b9190613adc565b60405180910390a35050565b60126020528060005260406000206000915090508060000160009054906101000a900460ff16908060000160019054906101000a900460ff16908060010154905083565b601060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146116eb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116e290613c42565b60405180910390fd5b6001601260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548160ff02191690831515021790555050565b61175a611754611a14565b83611a1c565b611799576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161179090613e02565b60405180910390fd5b6117a584848484611b7e565b50505050565b60606117c66117b8611849565b6117c184611bda565b611d07565b9050919050565b601382908060018154018082558091505090600182039060005260206000209060020201600090919290919091506000820151816000019080519060200190611817929190612c09565b5060208201518160010155505050806011908051906020019061183b929190612c89565b5061184533611264565b5050565b606060405180602001604052806000815250905090565b6000600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6118fc611395565b61193b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161193290613da2565b60405180910390fd5b61194481611d4b565b50565b33601060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550806011908051906020019061199e929190612c89565b5050565b6000806001600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415915050919050565b600033905090565b6000611a27826119a2565b611a66576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a5d90613ca2565b60405180910390fd5b6000611a7183610f49565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480611ae057508373ffffffffffffffffffffffffffffffffffffffff16611ac884610974565b73ffffffffffffffffffffffffffffffffffffffff16145b80611af15750611af08185611860565b5b91505092915050565b611b05838383611e7b565b611b0f83826120aa565b611b198282612248565b505050565b600081600001549050919050565b6000611b446001600f5461230f90919063ffffffff16565b905090565b611b538282612364565b611b5d8282612248565b611b6681612516565b5050565b600f60008154809291906001019190505550565b611b89848484611afa565b611b9584848484612562565b611bd4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611bcb90613bc2565b60405180910390fd5b50505050565b60606000821415611c22576040518060400160405280600181526020017f30000000000000000000000000000000000000000000000000000000000000008152509050611d02565b600082905060005b60008214611c4c578080600101915050600a8281611c4457fe5b049150611c2a565b6060816040519080825280601f01601f191660200182016040528015611c815781602001600182028038833980820191505090505b50905060006001830390505b60008614611cfa57600a8681611c9f57fe5b0660300160f81b82828060019003935081518110611cb957fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a8681611cf257fe5b049550611c8d565b819450505050505b919050565b6060611d43838360405180602001604052806000815250604051806020016040528060008152506040518060200160405280600081525061275c565b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611dbb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611db290613be2565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16600d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600d60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b8273ffffffffffffffffffffffffffffffffffffffff16611e9b82610f49565b73ffffffffffffffffffffffffffffffffffffffff1614611ef1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611ee890613dc2565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611f61576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611f5890613c62565b60405180910390fd5b611f6a81612a22565b611fb1600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612ae0565b611ff8600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612b03565b816001600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b60006121026001600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050612b1990919063ffffffff16565b90506000600660008481526020019081526020016000205490508181146121ef576000600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020838154811061216f57fe5b9060005260206000200154905080600560008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002083815481106121c757fe5b9060005260206000200181905550816006600083815260200190815260200160002081905550505b600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054809190600190036122419190612d09565b5050505050565b600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490506006600083815260200190815260200160002081905550600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150509060018203906000526020600020016000909192909190915055505050565b60008082840190508381101561235a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161235190613c22565b60405180910390fd5b8091505092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156123d4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016123cb90613d62565b60405180910390fd5b6123dd816119a2565b1561241d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161241490613c02565b60405180910390fd5b816001600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506124b6600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612b03565b808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b6007805490506008600083815260200190815260200160002081905550600781908060018154018082558091505090600182039060005260206000200160009091929091909150555050565b60006125838473ffffffffffffffffffffffffffffffffffffffff16612b63565b6125905760019050612754565b600060608573ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff1663150b7a02905060e01b6125d4611a14565b8988886040516024016125ea9493929190613a90565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040516126549190613a5e565b6000604051808303816000865af19150503d8060008114612691576040519150601f19603f3d011682016040523d82523d6000602084013e612696565b606091505b5091509150816126ee576000815111156126b35780518082602001fd5b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016126e590613bc2565b60405180910390fd5b60008180602001905161270491908101906130f3565b905063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161493505050505b949350505050565b6060808690506060869050606086905060608690506060869050606081518351855187518951010101016040519080825280601f01601f1916602001820160405280156127b85781602001600182028038833980820191505090505b5090506060819050600080905060008090505b8851811015612839578881815181106127e057fe5b602001015160f81c60f81b8383806001019450815181106127fd57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535080806001019150506127cb565b5060008090505b87518110156128ae5787818151811061285557fe5b602001015160f81c60f81b83838060010194508151811061287257fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050612840565b5060008090505b8651811015612923578681815181106128ca57fe5b602001015160f81c60f81b8383806001019450815181106128e757fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535080806001019150506128b5565b5060008090505b85518110156129985785818151811061293f57fe5b602001015160f81c60f81b83838060010194508151811061295c57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350808060010191505061292a565b5060008090505b8451811015612a0d578481815181106129b457fe5b602001015160f81c60f81b8383806001019450815181106129d157fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350808060010191505061299f565b50819850505050505050505095945050505050565b600073ffffffffffffffffffffffffffffffffffffffff166002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614612add5760006002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b612af860018260000154612b1990919063ffffffff16565b816000018190555050565b6001816000016000828254019250508190555050565b6000612b5b83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250612bae565b905092915050565b60008060007fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47060001b9050833f9150808214158015612ba557506000801b8214155b92505050919050565b6000838311158290612bf6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612bed9190613b50565b60405180910390fd5b5060008385039050809150509392505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10612c4a57805160ff1916838001178555612c78565b82800160010185558215612c78579182015b82811115612c77578251825591602001919060010190612c5c565b5b509050612c859190612d35565b5090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10612cca57805160ff1916838001178555612cf8565b82800160010185558215612cf8579182015b82811115612cf7578251825591602001919060010190612cdc565b5b509050612d059190612d35565b5090565b815481835581811115612d3057818360005260206000209182019101612d2f9190612d35565b5b505050565b612d5791905b80821115612d53576000816000905550600101612d3b565b5090565b90565b600081359050612d6981614035565b92915050565b600081359050612d7e8161404c565b92915050565b600081359050612d9381614063565b92915050565b600081519050612da881614063565b92915050565b600082601f830112612dbf57600080fd5b8135612dd2612dcd82613e8a565b613e5d565b91508082526020830160208301858383011115612dee57600080fd5b612df9838284613fe2565b50505092915050565b600082601f830112612e1357600080fd5b8135612e26612e2182613eb6565b613e5d565b91508082526020830160208301858383011115612e4257600080fd5b612e4d838284613fe2565b50505092915050565b600082601f830112612e6757600080fd5b8135612e7a612e7582613ee2565b613e5d565b91508082526020830160208301858383011115612e9657600080fd5b612ea1838284613fe2565b50505092915050565b600060408284031215612ebc57600080fd5b612ec66040613e5d565b9050600082013567ffffffffffffffff811115612ee257600080fd5b612eee84828501612e02565b6000830152506020612f0284828501612f0e565b60208301525092915050565b600081359050612f1d8161407a565b92915050565b600060208284031215612f3557600080fd5b6000612f4384828501612d5a565b91505092915050565b60008060408385031215612f5f57600080fd5b6000612f6d85828601612d5a565b9250506020612f7e85828601612d5a565b9150509250929050565b600080600060608486031215612f9d57600080fd5b6000612fab86828701612d5a565b9350506020612fbc86828701612d5a565b9250506040612fcd86828701612f0e565b9150509250925092565b60008060008060808587031215612fed57600080fd5b6000612ffb87828801612d5a565b945050602061300c87828801612d5a565b935050604061301d87828801612f0e565b925050606085013567ffffffffffffffff81111561303a57600080fd5b61304687828801612dae565b91505092959194509250565b6000806040838503121561306557600080fd5b600061307385828601612d5a565b925050602061308485828601612d6f565b9150509250929050565b600080604083850312156130a157600080fd5b60006130af85828601612d5a565b92505060206130c085828601612f0e565b9150509250929050565b6000602082840312156130dc57600080fd5b60006130ea84828501612d84565b91505092915050565b60006020828403121561310557600080fd5b600061311384828501612d99565b91505092915050565b60006020828403121561312e57600080fd5b600082013567ffffffffffffffff81111561314857600080fd5b61315484828501612e56565b91505092915050565b6000806040838503121561317057600080fd5b600083013567ffffffffffffffff81111561318a57600080fd5b61319685828601612eaa565b925050602083013567ffffffffffffffff8111156131b357600080fd5b6131bf85828601612e56565b9150509250929050565b6000602082840312156131db57600080fd5b60006131e984828501612f0e565b91505092915050565b6131fb81613f6e565b82525050565b61320a81613f5c565b82525050565b61321981613f80565b82525050565b600061322a82613f0e565b6132348185613f2f565b9350613244818560208601613ff1565b61324d81614024565b840191505092915050565b600061326382613f0e565b61326d8185613f40565b935061327d818560208601613ff1565b80840191505092915050565b600061329482613f24565b61329e8185613f4b565b93506132ae818560208601613ff1565b6132b781614024565b840191505092915050565b60006132cd82613f19565b6132d78185613f4b565b93506132e7818560208601613ff1565b6132f081614024565b840191505092915050565b6000613308602b83613f4b565b91507f455243373231456e756d657261626c653a206f776e657220696e646578206f7560008301527f74206f6620626f756e64730000000000000000000000000000000000000000006020830152604082019050919050565b600061336e603283613f4b565b91507f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560008301527f63656976657220696d706c656d656e74657200000000000000000000000000006020830152604082019050919050565b60006133d4602683613f4b565b91507f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008301527f64647265737300000000000000000000000000000000000000000000000000006020830152604082019050919050565b600061343a601c83613f4b565b91507f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006000830152602082019050919050565b600061347a601b83613f4b565b91507f536166654d6174683a206164646974696f6e206f766572666c6f7700000000006000830152602082019050919050565b60006134ba602a83613f4b565b91507f556e6175746f726973656420616363657373202c206f6e6c79204f776e65722060008301527f63616e20616363657373000000000000000000000000000000000000000000006020830152604082019050919050565b6000613520602483613f4b565b91507f4552433732313a207472616e7366657220746f20746865207a65726f2061646460008301527f72657373000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000613586601983613f4b565b91507f4552433732313a20617070726f766520746f2063616c6c6572000000000000006000830152602082019050919050565b60006135c6602c83613f4b565b91507f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860008301527f697374656e7420746f6b656e00000000000000000000000000000000000000006020830152604082019050919050565b600061362c601d83613f4b565b91507f416c726561647920766f746564206f6e207468697320616464726573730000006000830152602082019050919050565b600061366c603883613f4b565b91507f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760008301527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006020830152604082019050919050565b60006136d2602a83613f4b565b91507f4552433732313a2062616c616e636520717565727920666f7220746865207a6560008301527f726f2061646472657373000000000000000000000000000000000000000000006020830152604082019050919050565b6000613738602983613f4b565b91507f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460008301527f656e7420746f6b656e00000000000000000000000000000000000000000000006020830152604082019050919050565b600061379e601683613f4b565b91507f5761697420666f7220617574686f72697a6174696f6e000000000000000000006000830152602082019050919050565b60006137de602083613f4b565b91507f4552433732313a206d696e7420746f20746865207a65726f20616464726573736000830152602082019050919050565b600061381e602c83613f4b565b91507f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860008301527f697374656e7420746f6b656e00000000000000000000000000000000000000006020830152604082019050919050565b6000613884602083613f4b565b91507f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726000830152602082019050919050565b60006138c4602983613f4b565b91507f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960008301527f73206e6f74206f776e00000000000000000000000000000000000000000000006020830152604082019050919050565b600061392a602183613f4b565b91507f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560008301527f72000000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000613990603183613f4b565b91507f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f60008301527f776e6572206e6f7220617070726f7665640000000000000000000000000000006020830152604082019050919050565b60006139f6602c83613f4b565b91507f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60008301527f7574206f6620626f756e647300000000000000000000000000000000000000006020830152604082019050919050565b613a5881613fd8565b82525050565b6000613a6a8284613258565b915081905092915050565b6000602082019050613a8a6000830184613201565b92915050565b6000608082019050613aa560008301876131f2565b613ab26020830186613201565b613abf6040830185613a4f565b8181036060830152613ad1818461321f565b905095945050505050565b6000602082019050613af16000830184613210565b92915050565b6000606082019050613b0c6000830186613210565b613b196020830185613210565b613b266040830184613a4f565b949350505050565b60006020820190508181036000830152613b4881846132c2565b905092915050565b60006020820190508181036000830152613b6a8184613289565b905092915050565b60006040820190508181036000830152613b8c81856132c2565b9050613b9b6020830184613a4f565b9392505050565b60006020820190508181036000830152613bbb816132fb565b9050919050565b60006020820190508181036000830152613bdb81613361565b9050919050565b60006020820190508181036000830152613bfb816133c7565b9050919050565b60006020820190508181036000830152613c1b8161342d565b9050919050565b60006020820190508181036000830152613c3b8161346d565b9050919050565b60006020820190508181036000830152613c5b816134ad565b9050919050565b60006020820190508181036000830152613c7b81613513565b9050919050565b60006020820190508181036000830152613c9b81613579565b9050919050565b60006020820190508181036000830152613cbb816135b9565b9050919050565b60006020820190508181036000830152613cdb8161361f565b9050919050565b60006020820190508181036000830152613cfb8161365f565b9050919050565b60006020820190508181036000830152613d1b816136c5565b9050919050565b60006020820190508181036000830152613d3b8161372b565b9050919050565b60006020820190508181036000830152613d5b81613791565b9050919050565b60006020820190508181036000830152613d7b816137d1565b9050919050565b60006020820190508181036000830152613d9b81613811565b9050919050565b60006020820190508181036000830152613dbb81613877565b9050919050565b60006020820190508181036000830152613ddb816138b7565b9050919050565b60006020820190508181036000830152613dfb8161391d565b9050919050565b60006020820190508181036000830152613e1b81613983565b9050919050565b60006020820190508181036000830152613e3b816139e9565b9050919050565b6000602082019050613e576000830184613a4f565b92915050565b6000604051905081810181811067ffffffffffffffff82111715613e8057600080fd5b8060405250919050565b600067ffffffffffffffff821115613ea157600080fd5b601f19601f8301169050602081019050919050565b600067ffffffffffffffff821115613ecd57600080fd5b601f19601f8301169050602081019050919050565b600067ffffffffffffffff821115613ef957600080fd5b601f19601f8301169050602081019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b6000613f6782613fb8565b9050919050565b6000613f7982613fb8565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b8381101561400f578082015181840152602081019050613ff4565b8381111561401e576000848401525b50505050565b6000601f19601f8301169050919050565b61403e81613f5c565b811461404957600080fd5b50565b61405581613f80565b811461406057600080fd5b50565b61406c81613f8c565b811461407757600080fd5b50565b61408381613fd8565b811461408e57600080fd5b5056fea365627a7a72315820a1ec7c6e8097bc7b0e4a76a243c9cb89424f7fcf87e37ae04167fb2f3418391f6c6578706572696d656e74616cf564736f6c63430005100040",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101fb5760003560e01c806370a082311161011a578063a3ec138d116100ad578063d3d699061161007c578063d3d69906146105c7578063d547cfb7146105e3578063e985e9c514610601578063f2fde38b14610631578063f34f5f451461064d576101fb565b8063a3ec138d1461052d578063b6a5d7de1461055f578063b88d4fde1461057b578063c87b56dd14610597576101fb565b80638da5cb5b116100e95780638da5cb5b146104b75780638f32d59b146104d557806395d89b41146104f3578063a22cb46514610511576101fb565b806370a0823114610443578063715018a614610473578063755edd171461047d57806385e8e7a714610499576101fb565b80632e4176cf11610192578063462e91ec11610161578063462e91ec146103a95780634f6ccce7146103c55780636352211e146103f55780636c0360eb14610425576101fb565b80632e4176cf1461030e5780632f745c591461032c5780633477ee2e1461035c57806342842e0e1461038d576101fb565b8063095ea7b3116101ce578063095ea7b31461029a5780630d15fd77146102b657806318160ddd146102d457806323b872dd146102f2576101fb565b80630121b93f1461020057806301ffc9a71461021c57806306fdde031461024c578063081812fc1461026a575b600080fd5b61021a600480360361021591908101906131c9565b610669565b005b610236600480360361023191908101906130ca565b61086b565b6040516102439190613adc565b60405180910390f35b6102546108d2565b6040516102619190613b50565b60405180910390f35b610284600480360361027f91908101906131c9565b610974565b6040516102919190613a75565b60405180910390f35b6102b460048036036102af919081019061308e565b6109f9565b005b6102be610bb4565b6040516102cb9190613e42565b60405180910390f35b6102dc610bba565b6040516102e99190613e42565b60405180910390f35b61030c60048036036103079190810190612f88565b610bc7565b005b610316610c27565b6040516103239190613a75565b60405180910390f35b6103466004803603610341919081019061308e565b610c4d565b6040516103539190613e42565b60405180910390f35b610376600480360361037191908101906131c9565b610cf6565b604051610384929190613b72565b60405180910390f35b6103a760048036036103a29190810190612f88565b610dbf565b005b6103c360048036036103be919081019061311c565b610ddf565b005b6103df60048036036103da91908101906131c9565b610edf565b6040516103ec9190613e42565b60405180910390f35b61040f600480360361040a91908101906131c9565b610f49565b60405161041c9190613a75565b60405180910390f35b61042d610ffb565b60405161043a9190613b50565b60405180910390f35b61045d60048036036104589190810190612f23565b61109d565b60405161046a9190613e42565b60405180910390f35b61047b61115c565b005b61049760048036036104929190810190612f23565b611264565b005b6104a16112cd565b6040516104ae9190613b2e565b60405180910390f35b6104bf61136b565b6040516104cc9190613a75565b60405180910390f35b6104dd611395565b6040516104ea9190613adc565b60405180910390f35b6104fb6113f4565b6040516105089190613b50565b60405180910390f35b61052b60048036036105269190810190613052565b611496565b005b61054760048036036105429190810190612f23565b611617565b60405161055693929190613af7565b60405180910390f35b61057960048036036105749190810190612f23565b61165b565b005b61059560048036036105909190810190612fd7565b611749565b005b6105b160048036036105ac91908101906131c9565b6117ab565b6040516105be9190613b50565b60405180910390f35b6105e160048036036105dc919081019061315d565b6117cd565b005b6105eb611849565b6040516105f89190613b50565b60405180910390f35b61061b60048036036106169190810190612f4c565b611860565b6040516106289190613adc565b60405180910390f35b61064b60048036036106469190810190612f23565b6118f4565b005b6106676004803603610662919081019061311c565b611947565b005b601260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160019054906101000a900460ff16156106f9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106f090613cc2565b60405180910390fd5b601260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff16610788576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161077f90613d42565b60405180910390fd5b80601260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819055506001601260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160016101000a81548160ff02191690831515021790555060016013828154811061083957fe5b906000526020600020906002020160010160008282540192505081905550600160146000828254019250508190555050565b6000806000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b606060098054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561096a5780601f1061093f5761010080835404028352916020019161096a565b820191906000526020600020905b81548152906001019060200180831161094d57829003601f168201915b5050505050905090565b600061097f826119a2565b6109be576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109b590613d82565b60405180910390fd5b6002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000610a0482610f49565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610a75576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a6c90613de2565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16610a94611a14565b73ffffffffffffffffffffffffffffffffffffffff161480610ac35750610ac281610abd611a14565b611860565b5b610b02576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610af990613ce2565b60405180910390fd5b826002600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b60145481565b6000600780549050905090565b610bd8610bd2611a14565b82611a1c565b610c17576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c0e90613e02565b60405180910390fd5b610c22838383611afa565b505050565b601060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000610c588361109d565b8210610c99576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c9090613ba2565b60405180910390fd5b600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208281548110610ce357fe5b9060005260206000200154905092915050565b60138181548110610d0357fe5b9060005260206000209060020201600091509050806000018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610daf5780601f10610d8457610100808354040283529160200191610daf565b820191906000526020600020905b815481529060010190602001808311610d9257829003601f168201915b5050505050908060010154905082565b610dda83838360405180602001604052806000815250611749565b505050565b601060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610e6f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e6690613c42565b60405180910390fd5b601360405180604001604052808381526020016000815250908060018154018082558091505090600182039060005260206000209060020201600090919290919091506000820151816000019080519060200190610ece929190612c09565b506020820151816001015550505050565b6000610ee9610bba565b8210610f2a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f2190613e22565b60405180910390fd5b60078281548110610f3757fe5b90600052602060002001549050919050565b6000806001600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610ff2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fe990613d22565b60405180910390fd5b80915050919050565b6060600b8054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156110935780601f1061106857610100808354040283529160200191611093565b820191906000526020600020905b81548152906001019060200180831161107657829003601f168201915b5050505050905090565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561110e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161110590613d02565b60405180910390fd5b611155600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020611b1e565b9050919050565b611164611395565b6111a3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161119a90613da2565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36000600d60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b61126c611395565b6112ab576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112a290613da2565b60405180910390fd5b60006112b5611b2c565b90506112c18282611b49565b6112c9611b6a565b5050565b60118054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156113635780601f1061133857610100808354040283529160200191611363565b820191906000526020600020905b81548152906001019060200180831161134657829003601f168201915b505050505081565b6000600d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166113d8611a14565b73ffffffffffffffffffffffffffffffffffffffff1614905090565b6060600a8054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561148c5780601f106114615761010080835404028352916020019161148c565b820191906000526020600020905b81548152906001019060200180831161146f57829003601f168201915b5050505050905090565b61149e611a14565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561150c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161150390613c82565b60405180910390fd5b8060046000611519611a14565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff166115c6611a14565b73ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c318360405161160b9190613adc565b60405180910390a35050565b60126020528060005260406000206000915090508060000160009054906101000a900460ff16908060000160019054906101000a900460ff16908060010154905083565b601060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146116eb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116e290613c42565b60405180910390fd5b6001601260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548160ff02191690831515021790555050565b61175a611754611a14565b83611a1c565b611799576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161179090613e02565b60405180910390fd5b6117a584848484611b7e565b50505050565b60606117c66117b8611849565b6117c184611bda565b611d07565b9050919050565b601382908060018154018082558091505090600182039060005260206000209060020201600090919290919091506000820151816000019080519060200190611817929190612c09565b5060208201518160010155505050806011908051906020019061183b929190612c89565b5061184533611264565b5050565b606060405180602001604052806000815250905090565b6000600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6118fc611395565b61193b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161193290613da2565b60405180910390fd5b61194481611d4b565b50565b33601060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550806011908051906020019061199e929190612c89565b5050565b6000806001600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415915050919050565b600033905090565b6000611a27826119a2565b611a66576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a5d90613ca2565b60405180910390fd5b6000611a7183610f49565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480611ae057508373ffffffffffffffffffffffffffffffffffffffff16611ac884610974565b73ffffffffffffffffffffffffffffffffffffffff16145b80611af15750611af08185611860565b5b91505092915050565b611b05838383611e7b565b611b0f83826120aa565b611b198282612248565b505050565b600081600001549050919050565b6000611b446001600f5461230f90919063ffffffff16565b905090565b611b538282612364565b611b5d8282612248565b611b6681612516565b5050565b600f60008154809291906001019190505550565b611b89848484611afa565b611b9584848484612562565b611bd4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611bcb90613bc2565b60405180910390fd5b50505050565b60606000821415611c22576040518060400160405280600181526020017f30000000000000000000000000000000000000000000000000000000000000008152509050611d02565b600082905060005b60008214611c4c578080600101915050600a8281611c4457fe5b049150611c2a565b6060816040519080825280601f01601f191660200182016040528015611c815781602001600182028038833980820191505090505b50905060006001830390505b60008614611cfa57600a8681611c9f57fe5b0660300160f81b82828060019003935081518110611cb957fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a8681611cf257fe5b049550611c8d565b819450505050505b919050565b6060611d43838360405180602001604052806000815250604051806020016040528060008152506040518060200160405280600081525061275c565b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611dbb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611db290613be2565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16600d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600d60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b8273ffffffffffffffffffffffffffffffffffffffff16611e9b82610f49565b73ffffffffffffffffffffffffffffffffffffffff1614611ef1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611ee890613dc2565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611f61576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611f5890613c62565b60405180910390fd5b611f6a81612a22565b611fb1600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612ae0565b611ff8600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612b03565b816001600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b60006121026001600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050612b1990919063ffffffff16565b90506000600660008481526020019081526020016000205490508181146121ef576000600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020838154811061216f57fe5b9060005260206000200154905080600560008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002083815481106121c757fe5b9060005260206000200181905550816006600083815260200190815260200160002081905550505b600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054809190600190036122419190612d09565b5050505050565b600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490506006600083815260200190815260200160002081905550600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150509060018203906000526020600020016000909192909190915055505050565b60008082840190508381101561235a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161235190613c22565b60405180910390fd5b8091505092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156123d4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016123cb90613d62565b60405180910390fd5b6123dd816119a2565b1561241d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161241490613c02565b60405180910390fd5b816001600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506124b6600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612b03565b808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b6007805490506008600083815260200190815260200160002081905550600781908060018154018082558091505090600182039060005260206000200160009091929091909150555050565b60006125838473ffffffffffffffffffffffffffffffffffffffff16612b63565b6125905760019050612754565b600060608573ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff1663150b7a02905060e01b6125d4611a14565b8988886040516024016125ea9493929190613a90565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040516126549190613a5e565b6000604051808303816000865af19150503d8060008114612691576040519150601f19603f3d011682016040523d82523d6000602084013e612696565b606091505b5091509150816126ee576000815111156126b35780518082602001fd5b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016126e590613bc2565b60405180910390fd5b60008180602001905161270491908101906130f3565b905063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161493505050505b949350505050565b6060808690506060869050606086905060608690506060869050606081518351855187518951010101016040519080825280601f01601f1916602001820160405280156127b85781602001600182028038833980820191505090505b5090506060819050600080905060008090505b8851811015612839578881815181106127e057fe5b602001015160f81c60f81b8383806001019450815181106127fd57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535080806001019150506127cb565b5060008090505b87518110156128ae5787818151811061285557fe5b602001015160f81c60f81b83838060010194508151811061287257fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050612840565b5060008090505b8651811015612923578681815181106128ca57fe5b602001015160f81c60f81b8383806001019450815181106128e757fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535080806001019150506128b5565b5060008090505b85518110156129985785818151811061293f57fe5b602001015160f81c60f81b83838060010194508151811061295c57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350808060010191505061292a565b5060008090505b8451811015612a0d578481815181106129b457fe5b602001015160f81c60f81b8383806001019450815181106129d157fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350808060010191505061299f565b50819850505050505050505095945050505050565b600073ffffffffffffffffffffffffffffffffffffffff166002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614612add5760006002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b612af860018260000154612b1990919063ffffffff16565b816000018190555050565b6001816000016000828254019250508190555050565b6000612b5b83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250612bae565b905092915050565b60008060007fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47060001b9050833f9150808214158015612ba557506000801b8214155b92505050919050565b6000838311158290612bf6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612bed9190613b50565b60405180910390fd5b5060008385039050809150509392505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10612c4a57805160ff1916838001178555612c78565b82800160010185558215612c78579182015b82811115612c77578251825591602001919060010190612c5c565b5b509050612c859190612d35565b5090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10612cca57805160ff1916838001178555612cf8565b82800160010185558215612cf8579182015b82811115612cf7578251825591602001919060010190612cdc565b5b509050612d059190612d35565b5090565b815481835581811115612d3057818360005260206000209182019101612d2f9190612d35565b5b505050565b612d5791905b80821115612d53576000816000905550600101612d3b565b5090565b90565b600081359050612d6981614035565b92915050565b600081359050612d7e8161404c565b92915050565b600081359050612d9381614063565b92915050565b600081519050612da881614063565b92915050565b600082601f830112612dbf57600080fd5b8135612dd2612dcd82613e8a565b613e5d565b91508082526020830160208301858383011115612dee57600080fd5b612df9838284613fe2565b50505092915050565b600082601f830112612e1357600080fd5b8135612e26612e2182613eb6565b613e5d565b91508082526020830160208301858383011115612e4257600080fd5b612e4d838284613fe2565b50505092915050565b600082601f830112612e6757600080fd5b8135612e7a612e7582613ee2565b613e5d565b91508082526020830160208301858383011115612e9657600080fd5b612ea1838284613fe2565b50505092915050565b600060408284031215612ebc57600080fd5b612ec66040613e5d565b9050600082013567ffffffffffffffff811115612ee257600080fd5b612eee84828501612e02565b6000830152506020612f0284828501612f0e565b60208301525092915050565b600081359050612f1d8161407a565b92915050565b600060208284031215612f3557600080fd5b6000612f4384828501612d5a565b91505092915050565b60008060408385031215612f5f57600080fd5b6000612f6d85828601612d5a565b9250506020612f7e85828601612d5a565b9150509250929050565b600080600060608486031215612f9d57600080fd5b6000612fab86828701612d5a565b9350506020612fbc86828701612d5a565b9250506040612fcd86828701612f0e565b9150509250925092565b60008060008060808587031215612fed57600080fd5b6000612ffb87828801612d5a565b945050602061300c87828801612d5a565b935050604061301d87828801612f0e565b925050606085013567ffffffffffffffff81111561303a57600080fd5b61304687828801612dae565b91505092959194509250565b6000806040838503121561306557600080fd5b600061307385828601612d5a565b925050602061308485828601612d6f565b9150509250929050565b600080604083850312156130a157600080fd5b60006130af85828601612d5a565b92505060206130c085828601612f0e565b9150509250929050565b6000602082840312156130dc57600080fd5b60006130ea84828501612d84565b91505092915050565b60006020828403121561310557600080fd5b600061311384828501612d99565b91505092915050565b60006020828403121561312e57600080fd5b600082013567ffffffffffffffff81111561314857600080fd5b61315484828501612e56565b91505092915050565b6000806040838503121561317057600080fd5b600083013567ffffffffffffffff81111561318a57600080fd5b61319685828601612eaa565b925050602083013567ffffffffffffffff8111156131b357600080fd5b6131bf85828601612e56565b9150509250929050565b6000602082840312156131db57600080fd5b60006131e984828501612f0e565b91505092915050565b6131fb81613f6e565b82525050565b61320a81613f5c565b82525050565b61321981613f80565b82525050565b600061322a82613f0e565b6132348185613f2f565b9350613244818560208601613ff1565b61324d81614024565b840191505092915050565b600061326382613f0e565b61326d8185613f40565b935061327d818560208601613ff1565b80840191505092915050565b600061329482613f24565b61329e8185613f4b565b93506132ae818560208601613ff1565b6132b781614024565b840191505092915050565b60006132cd82613f19565b6132d78185613f4b565b93506132e7818560208601613ff1565b6132f081614024565b840191505092915050565b6000613308602b83613f4b565b91507f455243373231456e756d657261626c653a206f776e657220696e646578206f7560008301527f74206f6620626f756e64730000000000000000000000000000000000000000006020830152604082019050919050565b600061336e603283613f4b565b91507f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560008301527f63656976657220696d706c656d656e74657200000000000000000000000000006020830152604082019050919050565b60006133d4602683613f4b565b91507f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008301527f64647265737300000000000000000000000000000000000000000000000000006020830152604082019050919050565b600061343a601c83613f4b565b91507f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006000830152602082019050919050565b600061347a601b83613f4b565b91507f536166654d6174683a206164646974696f6e206f766572666c6f7700000000006000830152602082019050919050565b60006134ba602a83613f4b565b91507f556e6175746f726973656420616363657373202c206f6e6c79204f776e65722060008301527f63616e20616363657373000000000000000000000000000000000000000000006020830152604082019050919050565b6000613520602483613f4b565b91507f4552433732313a207472616e7366657220746f20746865207a65726f2061646460008301527f72657373000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000613586601983613f4b565b91507f4552433732313a20617070726f766520746f2063616c6c6572000000000000006000830152602082019050919050565b60006135c6602c83613f4b565b91507f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860008301527f697374656e7420746f6b656e00000000000000000000000000000000000000006020830152604082019050919050565b600061362c601d83613f4b565b91507f416c726561647920766f746564206f6e207468697320616464726573730000006000830152602082019050919050565b600061366c603883613f4b565b91507f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760008301527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006020830152604082019050919050565b60006136d2602a83613f4b565b91507f4552433732313a2062616c616e636520717565727920666f7220746865207a6560008301527f726f2061646472657373000000000000000000000000000000000000000000006020830152604082019050919050565b6000613738602983613f4b565b91507f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460008301527f656e7420746f6b656e00000000000000000000000000000000000000000000006020830152604082019050919050565b600061379e601683613f4b565b91507f5761697420666f7220617574686f72697a6174696f6e000000000000000000006000830152602082019050919050565b60006137de602083613f4b565b91507f4552433732313a206d696e7420746f20746865207a65726f20616464726573736000830152602082019050919050565b600061381e602c83613f4b565b91507f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860008301527f697374656e7420746f6b656e00000000000000000000000000000000000000006020830152604082019050919050565b6000613884602083613f4b565b91507f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726000830152602082019050919050565b60006138c4602983613f4b565b91507f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960008301527f73206e6f74206f776e00000000000000000000000000000000000000000000006020830152604082019050919050565b600061392a602183613f4b565b91507f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560008301527f72000000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000613990603183613f4b565b91507f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f60008301527f776e6572206e6f7220617070726f7665640000000000000000000000000000006020830152604082019050919050565b60006139f6602c83613f4b565b91507f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60008301527f7574206f6620626f756e647300000000000000000000000000000000000000006020830152604082019050919050565b613a5881613fd8565b82525050565b6000613a6a8284613258565b915081905092915050565b6000602082019050613a8a6000830184613201565b92915050565b6000608082019050613aa560008301876131f2565b613ab26020830186613201565b613abf6040830185613a4f565b8181036060830152613ad1818461321f565b905095945050505050565b6000602082019050613af16000830184613210565b92915050565b6000606082019050613b0c6000830186613210565b613b196020830185613210565b613b266040830184613a4f565b949350505050565b60006020820190508181036000830152613b4881846132c2565b905092915050565b60006020820190508181036000830152613b6a8184613289565b905092915050565b60006040820190508181036000830152613b8c81856132c2565b9050613b9b6020830184613a4f565b9392505050565b60006020820190508181036000830152613bbb816132fb565b9050919050565b60006020820190508181036000830152613bdb81613361565b9050919050565b60006020820190508181036000830152613bfb816133c7565b9050919050565b60006020820190508181036000830152613c1b8161342d565b9050919050565b60006020820190508181036000830152613c3b8161346d565b9050919050565b60006020820190508181036000830152613c5b816134ad565b9050919050565b60006020820190508181036000830152613c7b81613513565b9050919050565b60006020820190508181036000830152613c9b81613579565b9050919050565b60006020820190508181036000830152613cbb816135b9565b9050919050565b60006020820190508181036000830152613cdb8161361f565b9050919050565b60006020820190508181036000830152613cfb8161365f565b9050919050565b60006020820190508181036000830152613d1b816136c5565b9050919050565b60006020820190508181036000830152613d3b8161372b565b9050919050565b60006020820190508181036000830152613d5b81613791565b9050919050565b60006020820190508181036000830152613d7b816137d1565b9050919050565b60006020820190508181036000830152613d9b81613811565b9050919050565b60006020820190508181036000830152613dbb81613877565b9050919050565b60006020820190508181036000830152613ddb816138b7565b9050919050565b60006020820190508181036000830152613dfb8161391d565b9050919050565b60006020820190508181036000830152613e1b81613983565b9050919050565b60006020820190508181036000830152613e3b816139e9565b9050919050565b6000602082019050613e576000830184613a4f565b92915050565b6000604051905081810181811067ffffffffffffffff82111715613e8057600080fd5b8060405250919050565b600067ffffffffffffffff821115613ea157600080fd5b601f19601f8301169050602081019050919050565b600067ffffffffffffffff821115613ecd57600080fd5b601f19601f8301169050602081019050919050565b600067ffffffffffffffff821115613ef957600080fd5b601f19601f8301169050602081019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b6000613f6782613fb8565b9050919050565b6000613f7982613fb8565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b8381101561400f578082015181840152602081019050613ff4565b8381111561401e576000848401525b50505050565b6000601f19601f8301169050919050565b61403e81613f5c565b811461404957600080fd5b50565b61405581613f80565b811461406057600080fd5b50565b61406c81613f8c565b811461407757600080fd5b50565b61408381613fd8565b811461408e57600080fd5b5056fea365627a7a72315820a1ec7c6e8097bc7b0e4a76a243c9cb89424f7fcf87e37ae04167fb2f3418391f6c6578706572696d656e74616cf564736f6c63430005100040",
  "sourceMap": "150:1652:3:-;;;451:1:0;417:35;;540:142:3;8:9:-1;5:2;;;30:1;27;20:12;5:2;540:142:3;;;;;;;;;;;;;;;;;;;;;;;;459:178:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;615:21:3;557:5:0;564:7;533:4:12;539:6;718:40:6;385:10;737:20;;718:18;;;:40;;:::i;:::-;2262::10;2136:10;2281:20;;2262:18;;;:40;;:::i;:::-;1357:51:11;1172:10;1376:31;;1357:18;;;:51;;:::i;:::-;920:4:13;912:5;:12;;;;;;;;;;;;:::i;:::-;;944:6;934:7;:16;;;;;;;;;;;;:::i;:::-;;1038:49;774:10;1057:29;;1038:18;;;:49;;:::i;:::-;840:254;;456:155:12;;698:17:9;718:12;:10;;;:12;;:::i;:::-;698:32;;749:9;740:6;;:18;;;;;;;;;;;;;;;;;;806:9;773:43;;802:1;773:43;;;;;;;;;;;;664:159;610:21:0;587:20;;:44;;;;;;;;;;;;;;;;;;459:178;;;667:10:3;653:11;;:24;;;;;;;;;;;;;;;;;;540:142;150:1652;;1442:190:6;1532:10;1517:25;;:11;:25;;;;;1509:66;;;;;;;;;;;;;;;;;;;;;;1621:4;1585:20;:33;1606:11;1585:33;;;;;;;;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;1442:190;:::o;788:96:4:-;833:15;867:10;860:17;;788:96;:::o;150:1652:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5:134:-1:-;;89:6;83:13;74:22;;101:33;128:5;101:33;;;68:71;;;;;146:263;;261:2;249:9;240:7;236:23;232:32;229:2;;;277:1;274;267:12;229:2;312:1;329:64;385:7;376:6;365:9;361:22;329:64;;;319:74;;291:108;223:186;;;;;417:328;;577:67;641:2;636:3;577:67;;;570:74;;677:30;673:1;668:3;664:11;657:51;736:2;731:3;727:12;720:19;;563:182;;;;753:407;;944:2;933:9;929:18;921:26;;994:9;988:4;984:20;980:1;969:9;965:17;958:47;1019:131;1145:4;1019:131;;;1011:139;;915:245;;;;1168:163;;1283:6;1278:3;1271:19;1320:4;1315:3;1311:14;1296:29;;1264:67;;;;;1339:91;;1401:24;1419:5;1401:24;;;1390:35;;1384:46;;;;1437:121;;1510:42;1503:5;1499:54;1488:65;;1482:76;;;;1565:117;1634:24;1652:5;1634:24;;;1627:5;1624:35;1614:2;;1673:1;1670;1663:12;1614:2;1608:74;;150:1652:3;;;;;;;",
  "deployedSourceMap": "150:1652:3:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;150:1652:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1211:367;;;;;;;;;;;;;;;;:::i;:::-;;915:133:6;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1199:83:13;;;:::i;:::-;;;;;;;;;;;;;;;;4283:200:10;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;3583:415;;;;;;;;;;;;;;;;:::i;:::-;;513:22:3;;;:::i;:::-;;;;;;;;;;;;;;;;2171:94:11;;;:::i;:::-;;;;;;;;;;;;;;;;5929:287:10;;;;;;;;;;;;;;;;:::i;:::-;;363:26:3;;;:::i;:::-;;;;;;;;;;;;;;;;1789:229:11;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;477:29:3;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;6865:132:10;;;;;;;;;;;;;;;;:::i;:::-;;962:122:3;;;;;;;;;;;;;;;;:::i;:::-;;2603:196:11;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;2939:223:10;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;3387:89:13;;;:::i;:::-;;;;;;;;;;;;;;;;2513:207:10;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1684:137:9;;;:::i;:::-;;774:178:0;;;;;;;;;;;;;;;;:::i;:::-;;396:26:3;;;:::i;:::-;;;;;;;;;;;;;;;;899:77:9;;;:::i;:::-;;;;;;;;;;;;;;;;1250:92;;;:::i;:::-;;;;;;;;;;;;;;;;1391:87:13;;;:::i;:::-;;;;;;;;;;;;;;;;4776:249:10;;;;;;;;;;;;;;;;:::i;:::-;;431:39:3;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;1092:111;;;;;;;;;;;;;;;;:::i;:::-;;7720:269:10;;;;;;;;;;;;;;;;:::i;:::-;;1428:180:0;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1586:213:3;;;;;;;;;;;;;;;;:::i;:::-;;1340:82:0;;;:::i;:::-;;;;;;;;;;;;;;;;5347:145:10;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1970:107:9;;;;;;;;;;;;;;;;:::i;:::-;;835:119:3;;;;;;;;;;;;;;;;:::i;:::-;;1211:367;1268:6;:18;1275:10;1268:18;;;;;;;;;;;;;;;:24;;;;;;;;;;;;1267:25;1259:68;;;;;;;;;;;;;;;;;;;;;;1346:6;:18;1353:10;1346:18;;;;;;;;;;;;;;;:29;;;;;;;;;;;;1338:65;;;;;;;;;;;;;;;;;;;;;;1442:10;1416:6;:18;1423:10;1416:18;;;;;;;;;;;;;;;:23;;:36;;;;1490:4;1463:6;:18;1470:10;1463:18;;;;;;;;;;;;;;;:24;;;:31;;;;;;;;;;;;;;;;;;1543:1;1507:10;1518;1507:22;;;;;;;;;;;;;;;;;;:32;;;:37;;;;;;;;;;;1569:1;1555:10;;:15;;;;;;;;;;;1211:367;:::o;915:133:6:-;985:4;1008:20;:33;1029:11;1008:33;;;;;;;;;;;;;;;;;;;;;;;;;;;1001:40;;915:133;;;:::o;1199:83:13:-;1238:13;1270:5;1263:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1199:83;:::o;4283:200:10:-;4342:7;4369:16;4377:7;4369;:16::i;:::-;4361:73;;;;;;;;;;;;;;;;;;;;;;4452:15;:24;4468:7;4452:24;;;;;;;;;;;;;;;;;;;;;4445:31;;4283:200;;;:::o;3583:415::-;3646:13;3662:16;3670:7;3662;:16::i;:::-;3646:32;;3702:5;3696:11;;:2;:11;;;;3688:57;;;;;;;;;;;;;;;;;;;;;;3780:5;3764:21;;:12;:10;:12::i;:::-;:21;;;:62;;;;3789:37;3806:5;3813:12;:10;:12::i;:::-;3789:16;:37::i;:::-;3764:62;3756:152;;;;;;;;;;;;;;;;;;;;;;3946:2;3919:15;:24;3935:7;3919:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;3983:7;3979:2;3963:28;;3972:5;3963:28;;;;;;;;;;;;3583:415;;;:::o;513:22:3:-;;;;:::o;2171:94:11:-;2215:7;2241:10;:17;;;;2234:24;;2171:94;:::o;5929:287:10:-;6071:41;6090:12;:10;:12::i;:::-;6104:7;6071:18;:41::i;:::-;6063:103;;;;;;;;;;;;;;;;;;;;;;6177:32;6191:4;6197:2;6201:7;6177:13;:32::i;:::-;5929:287;;;:::o;363:26:3:-;;;;;;;;;;;;;:::o;1789:229:11:-;1869:7;1904:16;1914:5;1904:9;:16::i;:::-;1896:5;:24;1888:80;;;;;;;;;;;;;;;;;;;;;;1985:12;:19;1998:5;1985:19;;;;;;;;;;;;;;;2005:5;1985:26;;;;;;;;;;;;;;;;1978:33;;1789:229;;;;:::o;477:29:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;6865:132:10:-;6951:39;6968:4;6974:2;6978:7;6951:39;;;;;;;;;;;;:16;:39::i;:::-;6865:132;;;:::o;962:122:3:-;750:11;;;;;;;;;;;736:25;;:10;:25;;;728:79;;;;;;;;;;;;;;;;;;;;;;1039:10;1055:20;;;;;;;;1065:5;1055:20;;;;1073:1;1055:20;;;1039:37;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;1039:37:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;962:122;:::o;2603:196:11:-;2661:7;2696:13;:11;:13::i;:::-;2688:5;:21;2680:78;;;;;;;;;;;;;;;;;;;;;;2775:10;2786:5;2775:17;;;;;;;;;;;;;;;;2768:24;;2603:196;;;:::o;2939:223:10:-;2994:7;3013:13;3029:11;:20;3041:7;3029:20;;;;;;;;;;;;;;;;;;;;;3013:36;;3084:1;3067:19;;:5;:19;;;;3059:73;;;;;;;;;;;;;;;;;;;;;;3150:5;3143:12;;;2939:223;;;:::o;3387:89:13:-;3429:13;3461:8;3454:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3387:89;:::o;2513:207:10:-;2568:7;2612:1;2595:19;;:5;:19;;;;2587:74;;;;;;;;;;;;;;;;;;;;;;2679:34;:17;:24;2697:5;2679:24;;;;;;;;;;;;;;;:32;:34::i;:::-;2672:41;;2513:207;;;:::o;1684:137:9:-;1103:9;:7;:9::i;:::-;1095:54;;;;;;;;;;;;;;;;;;;;;;1782:1;1745:40;;1766:6;;;;;;;;;;;1745:40;;;;;;;;;;;;1812:1;1795:6;;:19;;;;;;;;;;;;;;;;;;1684:137::o;774:178:0:-;1103:9:9;:7;:9::i;:::-;1095:54;;;;;;;;;;;;;;;;;;;;;;835:18:0;856:17;:15;:17::i;:::-;835:38;;888:22;894:3;899:10;888:5;:22::i;:::-;925:19;:17;:19::i;:::-;1159:1:9;774:178:0;:::o;396:26:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;899:77:9:-;937:7;963:6;;;;;;;;;;;956:13;;899:77;:::o;1250:92::-;1290:4;1329:6;;;;;;;;;;;1313:22;;:12;:10;:12::i;:::-;:22;;;1306:29;;1250:92;:::o;1391:87:13:-;1432:13;1464:7;1457:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1391:87;:::o;4776:249:10:-;4861:12;:10;:12::i;:::-;4855:18;;:2;:18;;;;4847:56;;;;;;;;;;;;;;;;;;;;;;4953:8;4914:18;:32;4933:12;:10;:12::i;:::-;4914:32;;;;;;;;;;;;;;;:36;4947:2;4914:36;;;;;;;;;;;;;;;;:47;;;;;;;;;;;;;;;;;;5005:2;4976:42;;4991:12;:10;:12::i;:::-;4976:42;;;5009:8;4976:42;;;;;;;;;;;;;;;4776:249;;:::o;431:39:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1092:111::-;750:11;;;;;;;;;;;736:25;;:10;:25;;;728:79;;;;;;;;;;;;;;;;;;;;;;1191:4;1162:6;:15;1169:7;1162:15;;;;;;;;;;;;;;;:26;;;:33;;;;;;;;;;;;;;;;;;1092:111;:::o;7720:269:10:-;7834:41;7853:12;:10;:12::i;:::-;7867:7;7834:18;:41::i;:::-;7826:103;;;;;;;;;;;;;;;;;;;;;;7939:43;7957:4;7963:2;7967:7;7976:5;7939:17;:43::i;:::-;7720:269;;;;:::o;1428:180:0:-;1487:13;1516:86;1544:14;:12;:14::i;:::-;1569:26;1586:8;1569:16;:26::i;:::-;1516:17;:86::i;:::-;1509:93;;1428:180;;;:::o;1586:213:3:-;1688:10;1704:14;1688:31;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;1688:31:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1745:16;1730:12;:31;;;;;;;;;;;;:::i;:::-;;1773:18;1780:10;1773:6;:18::i;:::-;1586:213;;:::o;1340:82:0:-;1385:13;1407:9;;;;;;;;;;;;;;1340:82;:::o;5347:145:10:-;5427:4;5450:18;:25;5469:5;5450:25;;;;;;;;;;;;;;;:35;5476:8;5450:35;;;;;;;;;;;;;;;;;;;;;;;;;5443:42;;5347:145;;;;:::o;1970:107:9:-;1103:9;:7;:9::i;:::-;1095:54;;;;;;;;;;;;;;;;;;;;;;2042:28;2061:8;2042:18;:28::i;:::-;1970:107;:::o;835:119:3:-;905:10;891:11;;:24;;;;;;;;;;;;;;;;;;941:5;926:12;:20;;;;;;;;;;;;:::i;:::-;;835:119;:::o;9158:152:10:-;9215:4;9231:13;9247:11;:20;9259:7;9247:20;;;;;;;;;;;;;;;;;;;;;9231:36;;9301:1;9284:19;;:5;:19;;;;9277:26;;;9158:152;;;:::o;788:96:4:-;833:15;867:10;860:17;;788:96;:::o;9671:329:10:-;9756:4;9780:16;9788:7;9780;:16::i;:::-;9772:73;;;;;;;;;;;;;;;;;;;;;;9855:13;9871:16;9879:7;9871;:16::i;:::-;9855:32;;9916:5;9905:16;;:7;:16;;;:51;;;;9949:7;9925:31;;:20;9937:7;9925:11;:20::i;:::-;:31;;;9905:51;:87;;;;9960:32;9977:5;9984:7;9960:16;:32::i;:::-;9905:87;9897:96;;;9671:329;;;;:::o;3174:239:11:-;3259:38;3279:4;3285:2;3289:7;3259:19;:38::i;:::-;3308:47;3341:4;3347:7;3308:32;:47::i;:::-;3366:40;3394:2;3398:7;3366:27;:40::i;:::-;3174:239;;;:::o;1065:112:5:-;1130:7;1156;:14;;;1149:21;;1065:112;;;:::o;1092:100:0:-;1141:7;1164:22;1184:1;1164:15;;:19;;:22;;;;:::i;:::-;1157:29;;1092:100;:::o;3670:196:11:-;3733:24;3745:2;3749:7;3733:11;:24::i;:::-;3768:40;3796:2;3800:7;3768:27;:40::i;:::-;3819;3851:7;3819:31;:40::i;:::-;3670:196;;:::o;1266:68:0:-;1311:15;;:17;;;;;;;;;;;;;1266:68::o;8694:269:10:-;8803:32;8817:4;8823:2;8827:7;8803:13;:32::i;:::-;8853:48;8876:4;8882:2;8886:7;8895:5;8853:22;:48::i;:::-;8845:111;;;;;;;;;;;;;;;;;;;;;;8694:269;;;;:::o;1533:482:2:-;1583:27;1633:1;1627:2;:7;1623:50;;;1651:10;;;;;;;;;;;;;;;;;;;;;1623:50;1683:6;1692:2;1683:11;;1705:8;1724:69;1736:1;1731;:6;1724:69;;1754:5;;;;;;;1779:2;1774:7;;;;;;;;;1724:69;;;1803:17;1833:3;1823:14;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;1823:14:2;;;;1803:34;;1848:6;1863:1;1857:3;:7;1848:16;;1875:103;1888:1;1882:2;:7;1875:103;;1939:2;1934;:7;;;;;;1929:2;:12;1918:25;;1906:4;1911:3;;;;;;;1906:9;;;;;;;;;;;:37;;;;;;;;;;;1964:2;1958:8;;;;;;;;;1875:103;;;2002:4;1988:19;;;;;;1533:482;;;;:::o;1377:148::-;1455:13;1488:29;1498:2;1502;1488:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:9;:29::i;:::-;1481:36;;1377:148;;;;:::o;2178:225:9:-;2271:1;2251:22;;:8;:22;;;;2243:73;;;;;;;;;;;;;;;;;;;;;;2360:8;2331:38;;2352:6;;;;;;;;;;;2331:38;;;;;;;;;;;;2388:8;2379:6;;:17;;;;;;;;;;;;;;;;;;2178:225;:::o;13281:447:10:-;13394:4;13374:24;;:16;13382:7;13374;:16::i;:::-;:24;;;13366:78;;;;;;;;;;;;;;;;;;;;;;13476:1;13462:16;;:2;:16;;;;13454:65;;;;;;;;;;;;;;;;;;;;;;13530:23;13545:7;13530:14;:23::i;:::-;13564:35;:17;:23;13582:4;13564:23;;;;;;;;;;;;;;;:33;:35::i;:::-;13609:33;:17;:21;13627:2;13609:21;;;;;;;;;;;;;;;:31;:33::i;:::-;13676:2;13653:11;:20;13665:7;13653:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;13713:7;13709:2;13694:27;;13703:4;13694:27;;;;;;;;;;;;13281:447;;;:::o;6284:1128:11:-;6546:22;6571:32;6601:1;6571:12;:18;6584:4;6571:18;;;;;;;;;;;;;;;:25;;;;:29;;:32;;;;:::i;:::-;6546:57;;6613:18;6634:17;:26;6652:7;6634:26;;;;;;;;;;;;6613:47;;6778:14;6764:10;:28;6760:323;;6808:19;6830:12;:18;6843:4;6830:18;;;;;;;;;;;;;;;6849:14;6830:34;;;;;;;;;;;;;;;;6808:56;;6912:11;6879:12;:18;6892:4;6879:18;;;;;;;;;;;;;;;6898:10;6879:30;;;;;;;;;;;;;;;:44;;;;7028:10;6995:17;:30;7013:11;6995:30;;;;;;;;;;;:43;;;;6760:323;;7169:12;:18;7182:4;7169:18;;;;;;;;;;;;;;;:27;;;;;;;;;;;;:::i;:::-;;6284:1128;;;;:::o;5128:183::-;5241:12;:16;5254:2;5241:16;;;;;;;;;;;;;;;:23;;;;5212:17;:26;5230:7;5212:26;;;;;;;;;;;:52;;;;5274:12;:16;5287:2;5274:16;;;;;;;;;;;;;;;5296:7;5274:30;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;5274:30:11;;;;;;;;;;;;;;;;;;;;;;5128:183;;:::o;834:176:8:-;892:7;911:9;927:1;923;:5;911:17;;951:1;946;:6;;938:46;;;;;;;;;;;;;;;;;;;;;;1002:1;995:8;;;834:176;;;;:::o;11714:327:10:-;11799:1;11785:16;;:2;:16;;;;11777:61;;;;;;;;;;;;;;;;;;;;;;11857:16;11865:7;11857;:16::i;:::-;11856:17;11848:58;;;;;;;;;;;;;;;;;;;;;;11940:2;11917:11;:20;11929:7;11917:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;11952:33;:17;:21;11970:2;11952:21;;;;;;;;;;;;;;;:31;:33::i;:::-;12026:7;12022:2;12001:33;;12018:1;12001:33;;;;;;;;;;;;11714:327;;:::o;5506:161:11:-;5609:10;:17;;;;5582:15;:24;5598:7;5582:24;;;;;;;;;;;:44;;;;5636:10;5652:7;5636:24;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;5636:24:11;;;;;;;;;;;;;;;;;;;;;;5506:161;:::o;14367:1051:10:-;14488:4;14513:15;:2;:13;;;:15::i;:::-;14508:58;;14551:4;14544:11;;;;14508:58;14635:12;14649:23;14676:2;:7;;14736:2;14720:36;;;:45;;;;14779:12;:10;:12::i;:::-;14805:4;14823:7;14844:5;14684:175;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;14684:175:10;;;;;;;38:4:-1;29:7;25:18;67:10;61:17;96:58;199:8;192:4;186;182:15;179:29;167:10;160:49;0:215;;;14684:175:10;14676:184;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;14634:226:10;;;;14875:7;14870:542;;14922:1;14902:10;:17;:21;14898:376;;;15067:10;15061:17;15127:15;15114:10;15110:2;15106:19;15099:44;15016:145;15199:60;;;;;;;;;;;;;;;;;;;14870:542;15304:13;15331:10;15320:32;;;;;;;;;;;;;;15304:48;;754:10;15384:16;;15374:26;;;:6;:26;;;;15366:35;;;;;14367:1051;;;;;;;:::o;131:872:2:-;263:13;287:16;312:2;287:28;;324:16;349:2;324:28;;361:16;386:2;361:28;;398:16;423:2;398:28;;435:16;460:2;435:28;;472:19;557:3;:10;544:3;:10;531:3;:10;518:3;:10;505:3;:10;:23;:36;:49;:62;494:74;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;494:74:2;;;;472:96;;577:19;605:5;577:34;;620:6;629:1;620:10;;644:6;653:1;644:10;;639:58;660:3;:10;656:1;:14;639:58;;;691:3;695:1;691:6;;;;;;;;;;;;;;;;677;684:3;;;;;;677:11;;;;;;;;;;;:20;;;;;;;;;;;672:3;;;;;;;639:58;;;;711:6;720:1;711:10;;706:58;727:3;:10;723:1;:14;706:58;;;758:3;762:1;758:6;;;;;;;;;;;;;;;;744;751:3;;;;;;744:11;;;;;;;;;;;:20;;;;;;;;;;;739:3;;;;;;;706:58;;;;778:6;787:1;778:10;;773:58;794:3;:10;790:1;:14;773:58;;;825:3;829:1;825:6;;;;;;;;;;;;;;;;811;818:3;;;;;;811:11;;;;;;;;;;;:20;;;;;;;;;;;806:3;;;;;;;773:58;;;;845:6;854:1;845:10;;840:58;861:3;:10;857:1;:14;840:58;;;892:3;896:1;892:6;;;;;;;;;;;;;;;;878;885:3;;;;;;878:11;;;;;;;;;;;:20;;;;;;;;;;;873:3;;;;;;;840:58;;;;912:6;921:1;912:10;;907:58;928:3;:10;924:1;:14;907:58;;;959:3;963:1;959:6;;;;;;;;;;;;;;;;945;952:3;;;;;;945:11;;;;;;;;;;;:20;;;;;;;;;;;940:3;;;;;;;907:58;;;;988:6;974:21;;;;;;;;;;131:872;;;;;;;:::o;15580:171:10:-;15679:1;15643:38;;:15;:24;15659:7;15643:24;;;;;;;;;;;;;;;;;;;;;:38;;;15639:106;;15732:1;15697:15;:24;15713:7;15697:24;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;15639:106;15580:171;:::o;1367:108:5:-;1447:21;1466:1;1447:7;:14;;;:18;;:21;;;;:::i;:::-;1430:7;:14;;:38;;;;1367:108;:::o;1183:178::-;1353:1;1335:7;:14;;;:19;;;;;;;;;;;1183:178;:::o;1274:134:8:-;1332:7;1358:43;1362:1;1365;1358:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;1351:50;;1274:134;;;;:::o;686:610:18:-;746:4;1004:16;1030:19;1052:66;1030:88;;;;1219:7;1207:20;1195:32;;1258:11;1246:8;:23;;:42;;;;;1285:3;1273:15;;:8;:15;;1246:42;1238:51;;;;686:610;;;:::o;1732:187:8:-;1818:7;1850:1;1845;:6;;1853:12;1837:29;;;;;;;;;;;;;;;;;;;;;;;;;1876:9;1892:1;1888;:5;1876:17;;1911:1;1904:8;;;1732:187;;;;;:::o;150:1652:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5:130:-1:-;;85:6;72:20;63:29;;97:33;124:5;97:33;;;57:78;;;;;142:124;;219:6;206:20;197:29;;231:30;255:5;231:30;;;191:75;;;;;273:128;;352:6;339:20;330:29;;364:32;390:5;364:32;;;324:77;;;;;408:132;;491:6;485:13;476:22;;503:32;529:5;503:32;;;470:70;;;;;548:440;;649:3;642:4;634:6;630:17;626:27;616:2;;667:1;664;657:12;616:2;704:6;691:20;726:64;741:48;782:6;741:48;;;726:64;;;717:73;;810:6;803:5;796:21;846:4;838:6;834:17;879:4;872:5;868:16;914:3;905:6;900:3;896:16;893:25;890:2;;;931:1;928;921:12;890:2;941:41;975:6;970:3;965;941:41;;;609:379;;;;;;;;997:434;;1095:3;1088:4;1080:6;1076:17;1072:27;1062:2;;1113:1;1110;1103:12;1062:2;1150:6;1137:20;1172:61;1187:45;1225:6;1187:45;;;1172:61;;;1163:70;;1253:6;1246:5;1239:21;1289:4;1281:6;1277:17;1322:4;1315:5;1311:16;1357:3;1348:6;1343:3;1339:16;1336:25;1333:2;;;1374:1;1371;1364:12;1333:2;1384:41;1418:6;1413:3;1408;1384:41;;;1055:376;;;;;;;;1440:442;;1542:3;1535:4;1527:6;1523:17;1519:27;1509:2;;1560:1;1557;1550:12;1509:2;1597:6;1584:20;1619:65;1634:49;1676:6;1634:49;;;1619:65;;;1610:74;;1704:6;1697:5;1690:21;1740:4;1732:6;1728:17;1773:4;1766:5;1762:16;1808:3;1799:6;1794:3;1790:16;1787:25;1784:2;;;1825:1;1822;1815:12;1784:2;1835:41;1869:6;1864:3;1859;1835:41;;;1502:380;;;;;;;;1920:565;;2035:4;2023:9;2018:3;2014:19;2010:30;2007:2;;;2053:1;2050;2043:12;2007:2;2071:20;2086:4;2071:20;;;2062:29;;2169:1;2158:9;2154:17;2141:31;2192:18;2184:6;2181:30;2178:2;;;2224:1;2221;2214:12;2178:2;2259:55;2310:3;2301:6;2290:9;2286:22;2259:55;;;2252:4;2245:5;2241:16;2234:81;2101:225;2381:2;2414:49;2459:3;2450:6;2439:9;2435:22;2414:49;;;2407:4;2400:5;2396:16;2389:75;2336:139;2001:484;;;;;2492:130;;2572:6;2559:20;2550:29;;2584:33;2611:5;2584:33;;;2544:78;;;;;2629:241;;2733:2;2721:9;2712:7;2708:23;2704:32;2701:2;;;2749:1;2746;2739:12;2701:2;2784:1;2801:53;2846:7;2837:6;2826:9;2822:22;2801:53;;;2791:63;;2763:97;2695:175;;;;;2877:366;;;2998:2;2986:9;2977:7;2973:23;2969:32;2966:2;;;3014:1;3011;3004:12;2966:2;3049:1;3066:53;3111:7;3102:6;3091:9;3087:22;3066:53;;;3056:63;;3028:97;3156:2;3174:53;3219:7;3210:6;3199:9;3195:22;3174:53;;;3164:63;;3135:98;2960:283;;;;;;3250:491;;;;3388:2;3376:9;3367:7;3363:23;3359:32;3356:2;;;3404:1;3401;3394:12;3356:2;3439:1;3456:53;3501:7;3492:6;3481:9;3477:22;3456:53;;;3446:63;;3418:97;3546:2;3564:53;3609:7;3600:6;3589:9;3585:22;3564:53;;;3554:63;;3525:98;3654:2;3672:53;3717:7;3708:6;3697:9;3693:22;3672:53;;;3662:63;;3633:98;3350:391;;;;;;3748:721;;;;;3912:3;3900:9;3891:7;3887:23;3883:33;3880:2;;;3929:1;3926;3919:12;3880:2;3964:1;3981:53;4026:7;4017:6;4006:9;4002:22;3981:53;;;3971:63;;3943:97;4071:2;4089:53;4134:7;4125:6;4114:9;4110:22;4089:53;;;4079:63;;4050:98;4179:2;4197:53;4242:7;4233:6;4222:9;4218:22;4197:53;;;4187:63;;4158:98;4315:2;4304:9;4300:18;4287:32;4339:18;4331:6;4328:30;4325:2;;;4371:1;4368;4361:12;4325:2;4391:62;4445:7;4436:6;4425:9;4421:22;4391:62;;;4381:72;;4266:193;3874:595;;;;;;;;4476:360;;;4594:2;4582:9;4573:7;4569:23;4565:32;4562:2;;;4610:1;4607;4600:12;4562:2;4645:1;4662:53;4707:7;4698:6;4687:9;4683:22;4662:53;;;4652:63;;4624:97;4752:2;4770:50;4812:7;4803:6;4792:9;4788:22;4770:50;;;4760:60;;4731:95;4556:280;;;;;;4843:366;;;4964:2;4952:9;4943:7;4939:23;4935:32;4932:2;;;4980:1;4977;4970:12;4932:2;5015:1;5032:53;5077:7;5068:6;5057:9;5053:22;5032:53;;;5022:63;;4994:97;5122:2;5140:53;5185:7;5176:6;5165:9;5161:22;5140:53;;;5130:63;;5101:98;4926:283;;;;;;5216:239;;5319:2;5307:9;5298:7;5294:23;5290:32;5287:2;;;5335:1;5332;5325:12;5287:2;5370:1;5387:52;5431:7;5422:6;5411:9;5407:22;5387:52;;;5377:62;;5349:96;5281:174;;;;;5462:261;;5576:2;5564:9;5555:7;5551:23;5547:32;5544:2;;;5592:1;5589;5582:12;5544:2;5627:1;5644:63;5699:7;5690:6;5679:9;5675:22;5644:63;;;5634:73;;5606:107;5538:185;;;;;5730:347;;5844:2;5832:9;5823:7;5819:23;5815:32;5812:2;;;5860:1;5857;5850:12;5812:2;5923:1;5912:9;5908:17;5895:31;5946:18;5938:6;5935:30;5932:2;;;5978:1;5975;5968:12;5932:2;5998:63;6053:7;6044:6;6033:9;6029:22;5998:63;;;5988:73;;5874:193;5806:271;;;;;6084:610;;;6241:2;6229:9;6220:7;6216:23;6212:32;6209:2;;;6257:1;6254;6247:12;6209:2;6320:1;6309:9;6305:17;6292:31;6343:18;6335:6;6332:30;6329:2;;;6375:1;6372;6365:12;6329:2;6395:79;6466:7;6457:6;6446:9;6442:22;6395:79;;;6385:89;;6271:209;6539:2;6528:9;6524:18;6511:32;6563:18;6555:6;6552:30;6549:2;;;6595:1;6592;6585:12;6549:2;6615:63;6670:7;6661:6;6650:9;6646:22;6615:63;;;6605:73;;6490:194;6203:491;;;;;;6701:241;;6805:2;6793:9;6784:7;6780:23;6776:32;6773:2;;;6821:1;6818;6811:12;6773:2;6856:1;6873:53;6918:7;6909:6;6898:9;6894:22;6873:53;;;6863:63;;6835:97;6767:175;;;;;6949:137;7048:32;7074:5;7048:32;;;7043:3;7036:45;7030:56;;;7093:113;7176:24;7194:5;7176:24;;;7171:3;7164:37;7158:48;;;7213:104;7290:21;7305:5;7290:21;;;7285:3;7278:34;7272:45;;;7324:343;;7434:38;7466:5;7434:38;;;7484:70;7547:6;7542:3;7484:70;;;7477:77;;7559:52;7604:6;7599:3;7592:4;7585:5;7581:16;7559:52;;;7632:29;7654:6;7632:29;;;7627:3;7623:39;7616:46;;7414:253;;;;;;7674:356;;7802:38;7834:5;7802:38;;;7852:88;7933:6;7928:3;7852:88;;;7845:95;;7945:52;7990:6;7985:3;7978:4;7971:5;7967:16;7945:52;;;8018:6;8013:3;8009:16;8002:23;;7782:248;;;;;;8037:347;;8149:39;8182:5;8149:39;;;8200:71;8264:6;8259:3;8200:71;;;8193:78;;8276:52;8321:6;8316:3;8309:4;8302:5;8298:16;8276:52;;;8349:29;8371:6;8349:29;;;8344:3;8340:39;8333:46;;8129:255;;;;;;8391:339;;8499:35;8528:5;8499:35;;;8546:71;8610:6;8605:3;8546:71;;;8539:78;;8622:52;8667:6;8662:3;8655:4;8648:5;8644:16;8622:52;;;8695:29;8717:6;8695:29;;;8690:3;8686:39;8679:46;;8479:251;;;;;;8738:380;;8898:67;8962:2;8957:3;8898:67;;;8891:74;;8998:34;8994:1;8989:3;8985:11;8978:55;9067:13;9062:2;9057:3;9053:12;9046:35;9109:2;9104:3;9100:12;9093:19;;8884:234;;;;9127:387;;9287:67;9351:2;9346:3;9287:67;;;9280:74;;9387:34;9383:1;9378:3;9374:11;9367:55;9456:20;9451:2;9446:3;9442:12;9435:42;9505:2;9500:3;9496:12;9489:19;;9273:241;;;;9523:375;;9683:67;9747:2;9742:3;9683:67;;;9676:74;;9783:34;9779:1;9774:3;9770:11;9763:55;9852:8;9847:2;9842:3;9838:12;9831:30;9889:2;9884:3;9880:12;9873:19;;9669:229;;;;9907:328;;10067:67;10131:2;10126:3;10067:67;;;10060:74;;10167:30;10163:1;10158:3;10154:11;10147:51;10226:2;10221:3;10217:12;10210:19;;10053:182;;;;10244:327;;10404:67;10468:2;10463:3;10404:67;;;10397:74;;10504:29;10500:1;10495:3;10491:11;10484:50;10562:2;10557:3;10553:12;10546:19;;10390:181;;;;10580:379;;10740:67;10804:2;10799:3;10740:67;;;10733:74;;10840:34;10836:1;10831:3;10827:11;10820:55;10909:12;10904:2;10899:3;10895:12;10888:34;10950:2;10945:3;10941:12;10934:19;;10726:233;;;;10968:373;;11128:67;11192:2;11187:3;11128:67;;;11121:74;;11228:34;11224:1;11219:3;11215:11;11208:55;11297:6;11292:2;11287:3;11283:12;11276:28;11332:2;11327:3;11323:12;11316:19;;11114:227;;;;11350:325;;11510:67;11574:2;11569:3;11510:67;;;11503:74;;11610:27;11606:1;11601:3;11597:11;11590:48;11666:2;11661:3;11657:12;11650:19;;11496:179;;;;11684:381;;11844:67;11908:2;11903:3;11844:67;;;11837:74;;11944:34;11940:1;11935:3;11931:11;11924:55;12013:14;12008:2;12003:3;11999:12;11992:36;12056:2;12051:3;12047:12;12040:19;;11830:235;;;;12074:329;;12234:67;12298:2;12293:3;12234:67;;;12227:74;;12334:31;12330:1;12325:3;12321:11;12314:52;12394:2;12389:3;12385:12;12378:19;;12220:183;;;;12412:393;;12572:67;12636:2;12631:3;12572:67;;;12565:74;;12672:34;12668:1;12663:3;12659:11;12652:55;12741:26;12736:2;12731:3;12727:12;12720:48;12796:2;12791:3;12787:12;12780:19;;12558:247;;;;12814:379;;12974:67;13038:2;13033:3;12974:67;;;12967:74;;13074:34;13070:1;13065:3;13061:11;13054:55;13143:12;13138:2;13133:3;13129:12;13122:34;13184:2;13179:3;13175:12;13168:19;;12960:233;;;;13202:378;;13362:67;13426:2;13421:3;13362:67;;;13355:74;;13462:34;13458:1;13453:3;13449:11;13442:55;13531:11;13526:2;13521:3;13517:12;13510:33;13571:2;13566:3;13562:12;13555:19;;13348:232;;;;13589:322;;13749:67;13813:2;13808:3;13749:67;;;13742:74;;13849:24;13845:1;13840:3;13836:11;13829:45;13902:2;13897:3;13893:12;13886:19;;13735:176;;;;13920:332;;14080:67;14144:2;14139:3;14080:67;;;14073:74;;14180:34;14176:1;14171:3;14167:11;14160:55;14243:2;14238:3;14234:12;14227:19;;14066:186;;;;14261:381;;14421:67;14485:2;14480:3;14421:67;;;14414:74;;14521:34;14517:1;14512:3;14508:11;14501:55;14590:14;14585:2;14580:3;14576:12;14569:36;14633:2;14628:3;14624:12;14617:19;;14407:235;;;;14651:332;;14811:67;14875:2;14870:3;14811:67;;;14804:74;;14911:34;14907:1;14902:3;14898:11;14891:55;14974:2;14969:3;14965:12;14958:19;;14797:186;;;;14992:378;;15152:67;15216:2;15211:3;15152:67;;;15145:74;;15252:34;15248:1;15243:3;15239:11;15232:55;15321:11;15316:2;15311:3;15307:12;15300:33;15361:2;15356:3;15352:12;15345:19;;15138:232;;;;15379:370;;15539:67;15603:2;15598:3;15539:67;;;15532:74;;15639:34;15635:1;15630:3;15626:11;15619:55;15708:3;15703:2;15698:3;15694:12;15687:25;15740:2;15735:3;15731:12;15724:19;;15525:224;;;;15758:386;;15918:67;15982:2;15977:3;15918:67;;;15911:74;;16018:34;16014:1;16009:3;16005:11;15998:55;16087:19;16082:2;16077:3;16073:12;16066:41;16135:2;16130:3;16126:12;16119:19;;15904:240;;;;16153:381;;16313:67;16377:2;16372:3;16313:67;;;16306:74;;16413:34;16409:1;16404:3;16400:11;16393:55;16482:14;16477:2;16472:3;16468:12;16461:36;16525:2;16520:3;16516:12;16509:19;;16299:235;;;;16542:113;16625:24;16643:5;16625:24;;;16620:3;16613:37;16607:48;;;16662:262;;16806:93;16895:3;16886:6;16806:93;;;16799:100;;16916:3;16909:10;;16787:137;;;;;16931:213;;17049:2;17038:9;17034:18;17026:26;;17063:71;17131:1;17120:9;17116:17;17107:6;17063:71;;;17020:124;;;;;17151:663;;17387:3;17376:9;17372:19;17364:27;;17402:87;17486:1;17475:9;17471:17;17462:6;17402:87;;;17500:72;17568:2;17557:9;17553:18;17544:6;17500:72;;;17583;17651:2;17640:9;17636:18;17627:6;17583:72;;;17703:9;17697:4;17693:20;17688:2;17677:9;17673:18;17666:48;17728:76;17799:4;17790:6;17728:76;;;17720:84;;17358:456;;;;;;;;17821:201;;17933:2;17922:9;17918:18;17910:26;;17947:65;18009:1;17998:9;17994:17;17985:6;17947:65;;;17904:118;;;;;18029:411;;18191:2;18180:9;18176:18;18168:26;;18205:65;18267:1;18256:9;18252:17;18243:6;18205:65;;;18281:66;18343:2;18332:9;18328:18;18319:6;18281:66;;;18358:72;18426:2;18415:9;18411:18;18402:6;18358:72;;;18162:278;;;;;;;18447:293;;18581:2;18570:9;18566:18;18558:26;;18631:9;18625:4;18621:20;18617:1;18606:9;18602:17;18595:47;18656:74;18725:4;18716:6;18656:74;;;18648:82;;18552:188;;;;;18747:301;;18885:2;18874:9;18870:18;18862:26;;18935:9;18929:4;18925:20;18921:1;18910:9;18906:17;18899:47;18960:78;19033:4;19024:6;18960:78;;;18952:86;;18856:192;;;;;19055:404;;19217:2;19206:9;19202:18;19194:26;;19267:9;19261:4;19257:20;19253:1;19242:9;19238:17;19231:47;19292:74;19361:4;19352:6;19292:74;;;19284:82;;19377:72;19445:2;19434:9;19430:18;19421:6;19377:72;;;19188:271;;;;;;19466:407;;19657:2;19646:9;19642:18;19634:26;;19707:9;19701:4;19697:20;19693:1;19682:9;19678:17;19671:47;19732:131;19858:4;19732:131;;;19724:139;;19628:245;;;;19880:407;;20071:2;20060:9;20056:18;20048:26;;20121:9;20115:4;20111:20;20107:1;20096:9;20092:17;20085:47;20146:131;20272:4;20146:131;;;20138:139;;20042:245;;;;20294:407;;20485:2;20474:9;20470:18;20462:26;;20535:9;20529:4;20525:20;20521:1;20510:9;20506:17;20499:47;20560:131;20686:4;20560:131;;;20552:139;;20456:245;;;;20708:407;;20899:2;20888:9;20884:18;20876:26;;20949:9;20943:4;20939:20;20935:1;20924:9;20920:17;20913:47;20974:131;21100:4;20974:131;;;20966:139;;20870:245;;;;21122:407;;21313:2;21302:9;21298:18;21290:26;;21363:9;21357:4;21353:20;21349:1;21338:9;21334:17;21327:47;21388:131;21514:4;21388:131;;;21380:139;;21284:245;;;;21536:407;;21727:2;21716:9;21712:18;21704:26;;21777:9;21771:4;21767:20;21763:1;21752:9;21748:17;21741:47;21802:131;21928:4;21802:131;;;21794:139;;21698:245;;;;21950:407;;22141:2;22130:9;22126:18;22118:26;;22191:9;22185:4;22181:20;22177:1;22166:9;22162:17;22155:47;22216:131;22342:4;22216:131;;;22208:139;;22112:245;;;;22364:407;;22555:2;22544:9;22540:18;22532:26;;22605:9;22599:4;22595:20;22591:1;22580:9;22576:17;22569:47;22630:131;22756:4;22630:131;;;22622:139;;22526:245;;;;22778:407;;22969:2;22958:9;22954:18;22946:26;;23019:9;23013:4;23009:20;23005:1;22994:9;22990:17;22983:47;23044:131;23170:4;23044:131;;;23036:139;;22940:245;;;;23192:407;;23383:2;23372:9;23368:18;23360:26;;23433:9;23427:4;23423:20;23419:1;23408:9;23404:17;23397:47;23458:131;23584:4;23458:131;;;23450:139;;23354:245;;;;23606:407;;23797:2;23786:9;23782:18;23774:26;;23847:9;23841:4;23837:20;23833:1;23822:9;23818:17;23811:47;23872:131;23998:4;23872:131;;;23864:139;;23768:245;;;;24020:407;;24211:2;24200:9;24196:18;24188:26;;24261:9;24255:4;24251:20;24247:1;24236:9;24232:17;24225:47;24286:131;24412:4;24286:131;;;24278:139;;24182:245;;;;24434:407;;24625:2;24614:9;24610:18;24602:26;;24675:9;24669:4;24665:20;24661:1;24650:9;24646:17;24639:47;24700:131;24826:4;24700:131;;;24692:139;;24596:245;;;;24848:407;;25039:2;25028:9;25024:18;25016:26;;25089:9;25083:4;25079:20;25075:1;25064:9;25060:17;25053:47;25114:131;25240:4;25114:131;;;25106:139;;25010:245;;;;25262:407;;25453:2;25442:9;25438:18;25430:26;;25503:9;25497:4;25493:20;25489:1;25478:9;25474:17;25467:47;25528:131;25654:4;25528:131;;;25520:139;;25424:245;;;;25676:407;;25867:2;25856:9;25852:18;25844:26;;25917:9;25911:4;25907:20;25903:1;25892:9;25888:17;25881:47;25942:131;26068:4;25942:131;;;25934:139;;25838:245;;;;26090:407;;26281:2;26270:9;26266:18;26258:26;;26331:9;26325:4;26321:20;26317:1;26306:9;26302:17;26295:47;26356:131;26482:4;26356:131;;;26348:139;;26252:245;;;;26504:407;;26695:2;26684:9;26680:18;26672:26;;26745:9;26739:4;26735:20;26731:1;26720:9;26716:17;26709:47;26770:131;26896:4;26770:131;;;26762:139;;26666:245;;;;26918:407;;27109:2;27098:9;27094:18;27086:26;;27159:9;27153:4;27149:20;27145:1;27134:9;27130:17;27123:47;27184:131;27310:4;27184:131;;;27176:139;;27080:245;;;;27332:407;;27523:2;27512:9;27508:18;27500:26;;27573:9;27567:4;27563:20;27559:1;27548:9;27544:17;27537:47;27598:131;27724:4;27598:131;;;27590:139;;27494:245;;;;27746:407;;27937:2;27926:9;27922:18;27914:26;;27987:9;27981:4;27977:20;27973:1;27962:9;27958:17;27951:47;28012:131;28138:4;28012:131;;;28004:139;;27908:245;;;;28160:213;;28278:2;28267:9;28263:18;28255:26;;28292:71;28360:1;28349:9;28345:17;28336:6;28292:71;;;28249:124;;;;;28380:256;;28442:2;28436:9;28426:19;;28480:4;28472:6;28468:17;28579:6;28567:10;28564:22;28543:18;28531:10;28528:34;28525:62;28522:2;;;28600:1;28597;28590:12;28522:2;28620:10;28616:2;28609:22;28420:216;;;;;28643:321;;28786:18;28778:6;28775:30;28772:2;;;28818:1;28815;28808:12;28772:2;28885:4;28881:9;28874:4;28866:6;28862:17;28858:33;28850:41;;28949:4;28943;28939:15;28931:23;;28709:255;;;;28971:318;;29111:18;29103:6;29100:30;29097:2;;;29143:1;29140;29133:12;29097:2;29210:4;29206:9;29199:4;29191:6;29187:17;29183:33;29175:41;;29274:4;29268;29264:15;29256:23;;29034:255;;;;29296:322;;29440:18;29432:6;29429:30;29426:2;;;29472:1;29469;29462:12;29426:2;29539:4;29535:9;29528:4;29520:6;29516:17;29512:33;29504:41;;29603:4;29597;29593:15;29585:23;;29363:255;;;;29625:121;;29718:5;29712:12;29702:22;;29683:63;;;;29753:118;;29843:5;29837:12;29827:22;;29808:63;;;;29878:122;;29972:5;29966:12;29956:22;;29937:63;;;;30008:162;;30122:6;30117:3;30110:19;30159:4;30154:3;30150:14;30135:29;;30103:67;;;;;30179:144;;30314:3;30299:18;;30292:31;;;;;30332:163;;30447:6;30442:3;30435:19;30484:4;30479:3;30475:14;30460:29;;30428:67;;;;;30503:91;;30565:24;30583:5;30565:24;;;30554:35;;30548:46;;;;30601:99;;30671:24;30689:5;30671:24;;;30660:35;;30654:46;;;;30707:85;;30780:5;30773:13;30766:21;30755:32;;30749:43;;;;30799:144;;30871:66;30864:5;30860:78;30849:89;;30843:100;;;;30950:121;;31023:42;31016:5;31012:54;31001:65;;30995:76;;;;31078:72;;31140:5;31129:16;;31123:27;;;;31158:145;31239:6;31234:3;31229;31216:30;31295:1;31286:6;31281:3;31277:16;31270:27;31209:94;;;;31312:268;31377:1;31384:101;31398:6;31395:1;31392:13;31384:101;;;31474:1;31469:3;31465:11;31459:18;31455:1;31450:3;31446:11;31439:39;31420:2;31417:1;31413:10;31408:15;;31384:101;;;31500:6;31497:1;31494:13;31491:2;;;31565:1;31556:6;31551:3;31547:16;31540:27;31491:2;31361:219;;;;;31588:97;;31676:2;31672:7;31667:2;31660:5;31656:14;31652:28;31642:38;;31636:49;;;;31693:117;31762:24;31780:5;31762:24;;;31755:5;31752:35;31742:2;;31801:1;31798;31791:12;31742:2;31736:74;;31817:111;31883:21;31898:5;31883:21;;;31876:5;31873:32;31863:2;;31919:1;31916;31909:12;31863:2;31857:71;;31935:115;32003:23;32020:5;32003:23;;;31996:5;31993:34;31983:2;;32041:1;32038;32031:12;31983:2;31977:73;;32057:117;32126:24;32144:5;32126:24;;;32119:5;32116:35;32106:2;;32165:1;32162;32155:12;32106:2;32100:74;",
  "source": "pragma solidity ^0.5.0;\r\npragma experimental ABIEncoderV2;\r\n\r\nimport \"./ERC721Token.sol\";\r\nimport \"@openzeppelin/contracts/ownership/Ownable.sol\";\r\n\r\ncontract Voting is ERC721Token{\r\n\r\n    struct Candidate{\r\n        string name;\r\n        uint voteCount;\r\n    }\r\n\r\n    struct Voter{\r\n        bool authorized;\r\n        bool voted;\r\n        uint vote;\r\n    }\r\n\r\n    address public chairperson;\r\n    string public electionName;\r\n\r\n    mapping(address => Voter) public voters;\r\n    Candidate[] public candidates;\r\n    uint public totalVotes;\r\n\r\nconstructor(address _proxyRegistryAddress) ERC721Token(\"VoteToken\", \"VTK\", _proxyRegistryAddress) public { \r\n    chairperson = msg.sender;\r\n }\r\n\r\n    modifier _onlyChairperson(){\r\n        require(msg.sender == chairperson,\"Unautorised access , only Owner can access\");\r\n        _;\r\n    }\r\n\r\n    function Election(string memory _name) public{\r\n        chairperson = msg.sender;\r\n        electionName = _name;\r\n    }\r\n\r\n    function addCandidate(string memory _name) _onlyChairperson public{\r\n        candidates.push(Candidate(_name , 0));\r\n    }\r\n\r\n    function authorize(address _person) _onlyChairperson public{\r\n        voters[_person].authorized = true;\r\n    }\r\n\r\n    function vote(uint _voteIndex) public{\r\n        require(!voters[msg.sender].voted , \"Already voted on this address\");\r\n        require(voters[msg.sender].authorized , \"Wait for authorization\");\r\n\r\n        voters[msg.sender].vote = _voteIndex;\r\n        voters[msg.sender].voted = true;\r\n\r\n        candidates[_voteIndex].voteCount += 1;\r\n        totalVotes += 1;\r\n    }\r\n\r\n    function mintVoting(Candidate memory candidatesInit, string memory electionNameInit) public{\r\n        candidates.push(candidatesInit);\r\n        electionName = electionNameInit;\r\n         mintTo(msg.sender);\r\n    }\r\n}",
  "sourcePath": "C:\\Users\\Patterson Thamba\\Documents\\Assignment_VotingSystem\\contracts\\Voting.sol",
  "ast": {
    "absolutePath": "/C/Users/Patterson Thamba/Documents/Assignment_VotingSystem/contracts/Voting.sol",
    "exportedSymbols": {
      "Voting": [
        649
      ]
    },
    "id": 650,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 468,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:3"
      },
      {
        "id": 469,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "25:33:3"
      },
      {
        "absolutePath": "/C/Users/Patterson Thamba/Documents/Assignment_VotingSystem/contracts/ERC721Token.sol",
        "file": "./ERC721Token.sol",
        "id": 470,
        "nodeType": "ImportDirective",
        "scope": 650,
        "sourceUnit": 107,
        "src": "62:27:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/ownership/Ownable.sol",
        "file": "@openzeppelin/contracts/ownership/Ownable.sol",
        "id": 471,
        "nodeType": "ImportDirective",
        "scope": 650,
        "sourceUnit": 1093,
        "src": "91:55:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 472,
              "name": "ERC721Token",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 106,
              "src": "169:11:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Token_$106",
                "typeString": "contract ERC721Token"
              }
            },
            "id": 473,
            "nodeType": "InheritanceSpecifier",
            "src": "169:11:3"
          }
        ],
        "contractDependencies": [
          106,
          676,
          777,
          787,
          1092,
          1763,
          2103,
          2127,
          2300,
          2403,
          2430,
          2453
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 649,
        "linearizedBaseContracts": [
          649,
          106,
          1092,
          2127,
          2300,
          2453,
          2103,
          2430,
          1763,
          2403,
          777,
          787,
          676
        ],
        "name": "Voting",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "Voting.Candidate",
            "id": 478,
            "members": [
              {
                "constant": false,
                "id": 475,
                "name": "name",
                "nodeType": "VariableDeclaration",
                "scope": 478,
                "src": "216:11:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 474,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "216:6:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 477,
                "name": "voteCount",
                "nodeType": "VariableDeclaration",
                "scope": 478,
                "src": "238:14:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 476,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "238:4:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Candidate",
            "nodeType": "StructDefinition",
            "scope": 649,
            "src": "189:71:3",
            "visibility": "public"
          },
          {
            "canonicalName": "Voting.Voter",
            "id": 485,
            "members": [
              {
                "constant": false,
                "id": 480,
                "name": "authorized",
                "nodeType": "VariableDeclaration",
                "scope": 485,
                "src": "291:15:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 479,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "291:4:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 482,
                "name": "voted",
                "nodeType": "VariableDeclaration",
                "scope": 485,
                "src": "317:10:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 481,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "317:4:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 484,
                "name": "vote",
                "nodeType": "VariableDeclaration",
                "scope": 485,
                "src": "338:9:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 483,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "338:4:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Voter",
            "nodeType": "StructDefinition",
            "scope": 649,
            "src": "268:87:3",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 487,
            "name": "chairperson",
            "nodeType": "VariableDeclaration",
            "scope": 649,
            "src": "363:26:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 486,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "363:7:3",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 489,
            "name": "electionName",
            "nodeType": "VariableDeclaration",
            "scope": 649,
            "src": "396:26:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 488,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "396:6:3",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 493,
            "name": "voters",
            "nodeType": "VariableDeclaration",
            "scope": 649,
            "src": "431:39:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$485_storage_$",
              "typeString": "mapping(address => struct Voting.Voter)"
            },
            "typeName": {
              "id": 492,
              "keyType": {
                "id": 490,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "439:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "431:25:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$485_storage_$",
                "typeString": "mapping(address => struct Voting.Voter)"
              },
              "valueType": {
                "contractScope": null,
                "id": 491,
                "name": "Voter",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 485,
                "src": "450:5:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Voter_$485_storage_ptr",
                  "typeString": "struct Voting.Voter"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 496,
            "name": "candidates",
            "nodeType": "VariableDeclaration",
            "scope": 649,
            "src": "477:29:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_Candidate_$478_storage_$dyn_storage",
              "typeString": "struct Voting.Candidate[]"
            },
            "typeName": {
              "baseType": {
                "contractScope": null,
                "id": 494,
                "name": "Candidate",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 478,
                "src": "477:9:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Candidate_$478_storage_ptr",
                  "typeString": "struct Voting.Candidate"
                }
              },
              "id": 495,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "477:11:3",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_Candidate_$478_storage_$dyn_storage_ptr",
                "typeString": "struct Voting.Candidate[]"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 498,
            "name": "totalVotes",
            "nodeType": "VariableDeclaration",
            "scope": 649,
            "src": "513:22:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 497,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "513:4:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 513,
              "nodeType": "Block",
              "src": "645:37:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 511,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 508,
                      "name": "chairperson",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 487,
                      "src": "653:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 509,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2559,
                        "src": "667:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 510,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "667:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "653:24:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 512,
                  "nodeType": "ExpressionStatement",
                  "src": "653:24:3"
                }
              ]
            },
            "documentation": null,
            "id": 514,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "566f7465546f6b656e",
                    "id": 503,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "595:11:3",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_bc165a043d5396823178933d47872c2b3ecc8d6e28159b990ce2920f5a3a8815",
                      "typeString": "literal_string \"VoteToken\""
                    },
                    "value": "VoteToken"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "56544b",
                    "id": 504,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "608:5:3",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_a298718ad1cc360f4467871561a803a90bb66ee4a5cac04454e13da2f9a7b3c0",
                      "typeString": "literal_string \"VTK\""
                    },
                    "value": "VTK"
                  },
                  {
                    "argumentTypes": null,
                    "id": 505,
                    "name": "_proxyRegistryAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 500,
                    "src": "615:21:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 506,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 502,
                  "name": "ERC721Token",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 106,
                  "src": "583:11:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC721Token_$106_$",
                    "typeString": "type(contract ERC721Token)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "583:54:3"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 501,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 500,
                  "name": "_proxyRegistryAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 514,
                  "src": "552:29:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 499,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "552:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "551:31:3"
            },
            "returnParameters": {
              "id": 507,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "645:0:3"
            },
            "scope": 649,
            "src": "540:142:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 525,
              "nodeType": "Block",
              "src": "717:110:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 520,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 517,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2559,
                            "src": "736:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 518,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "736:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 519,
                          "name": "chairperson",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 487,
                          "src": "750:11:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "736:25:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "556e6175746f726973656420616363657373202c206f6e6c79204f776e65722063616e20616363657373",
                        "id": 521,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "762:44:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3ea688bd2f077b362cb30716fc591f3b40ca8e47c041066f70be3c506b8459bc",
                          "typeString": "literal_string \"Unautorised access , only Owner can access\""
                        },
                        "value": "Unautorised access , only Owner can access"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3ea688bd2f077b362cb30716fc591f3b40ca8e47c041066f70be3c506b8459bc",
                          "typeString": "literal_string \"Unautorised access , only Owner can access\""
                        }
                      ],
                      "id": 516,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2562,
                        2563
                      ],
                      "referencedDeclaration": 2563,
                      "src": "728:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 522,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "728:79:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 523,
                  "nodeType": "ExpressionStatement",
                  "src": "728:79:3"
                },
                {
                  "id": 524,
                  "nodeType": "PlaceholderStatement",
                  "src": "818:1:3"
                }
              ]
            },
            "documentation": null,
            "id": 526,
            "name": "_onlyChairperson",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 515,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "715:2:3"
            },
            "src": "690:137:3",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 540,
              "nodeType": "Block",
              "src": "880:74:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 534,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 531,
                      "name": "chairperson",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 487,
                      "src": "891:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 532,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2559,
                        "src": "905:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 533,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "905:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "891:24:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 535,
                  "nodeType": "ExpressionStatement",
                  "src": "891:24:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 538,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 536,
                      "name": "electionName",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 489,
                      "src": "926:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 537,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 528,
                      "src": "941:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "926:20:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 539,
                  "nodeType": "ExpressionStatement",
                  "src": "926:20:3"
                }
              ]
            },
            "documentation": null,
            "id": 541,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "Election",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 529,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 528,
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 541,
                  "src": "853:19:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 527,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "853:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "852:21:3"
            },
            "returnParameters": {
              "id": 530,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "880:0:3"
            },
            "scope": 649,
            "src": "835:119:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 557,
              "nodeType": "Block",
              "src": "1028:56:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 552,
                            "name": "_name",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 543,
                            "src": "1065:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 553,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1073:1:3",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 551,
                          "name": "Candidate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 478,
                          "src": "1055:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_Candidate_$478_storage_ptr_$",
                            "typeString": "type(struct Voting.Candidate storage pointer)"
                          }
                        },
                        "id": 554,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1055:20:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Candidate_$478_memory",
                          "typeString": "struct Voting.Candidate memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Candidate_$478_memory",
                          "typeString": "struct Voting.Candidate memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 548,
                        "name": "candidates",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 496,
                        "src": "1039:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Candidate_$478_storage_$dyn_storage",
                          "typeString": "struct Voting.Candidate storage ref[] storage ref"
                        }
                      },
                      "id": 550,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1039:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Candidate_$478_storage_$returns$_t_uint256_$",
                        "typeString": "function (struct Voting.Candidate storage ref) returns (uint256)"
                      }
                    },
                    "id": 555,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1039:37:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 556,
                  "nodeType": "ExpressionStatement",
                  "src": "1039:37:3"
                }
              ]
            },
            "documentation": null,
            "id": 558,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 546,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 545,
                  "name": "_onlyChairperson",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 526,
                  "src": "1005:16:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1005:16:3"
              }
            ],
            "name": "addCandidate",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 544,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 543,
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 558,
                  "src": "984:19:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 542,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "984:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "983:21:3"
            },
            "returnParameters": {
              "id": 547,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1028:0:3"
            },
            "scope": 649,
            "src": "962:122:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 572,
              "nodeType": "Block",
              "src": "1151:52:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 570,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 565,
                          "name": "voters",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 493,
                          "src": "1162:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$485_storage_$",
                            "typeString": "mapping(address => struct Voting.Voter storage ref)"
                          }
                        },
                        "id": 567,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 566,
                          "name": "_person",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 560,
                          "src": "1169:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1162:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Voter_$485_storage",
                          "typeString": "struct Voting.Voter storage ref"
                        }
                      },
                      "id": 568,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "authorized",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 480,
                      "src": "1162:26:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 569,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1191:4:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1162:33:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 571,
                  "nodeType": "ExpressionStatement",
                  "src": "1162:33:3"
                }
              ]
            },
            "documentation": null,
            "id": 573,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 563,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 562,
                  "name": "_onlyChairperson",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 526,
                  "src": "1128:16:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1128:16:3"
              }
            ],
            "name": "authorize",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 561,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 560,
                  "name": "_person",
                  "nodeType": "VariableDeclaration",
                  "scope": 573,
                  "src": "1111:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 559,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1111:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1110:17:3"
            },
            "returnParameters": {
              "id": 564,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1151:0:3"
            },
            "scope": 649,
            "src": "1092:111:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 624,
              "nodeType": "Block",
              "src": "1248:330:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 584,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "1267:25:3",
                        "subExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 579,
                              "name": "voters",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 493,
                              "src": "1268:6:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$485_storage_$",
                                "typeString": "mapping(address => struct Voting.Voter storage ref)"
                              }
                            },
                            "id": 582,
                            "indexExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 580,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2559,
                                "src": "1275:3:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 581,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "1275:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1268:18:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Voter_$485_storage",
                              "typeString": "struct Voting.Voter storage ref"
                            }
                          },
                          "id": 583,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "voted",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 482,
                          "src": "1268:24:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "416c726561647920766f746564206f6e20746869732061646472657373",
                        "id": 585,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1295:31:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5c44f0eba320e1b5bee45d2cbc84c5fade25310c273cc4e7e30768bee3557ec5",
                          "typeString": "literal_string \"Already voted on this address\""
                        },
                        "value": "Already voted on this address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5c44f0eba320e1b5bee45d2cbc84c5fade25310c273cc4e7e30768bee3557ec5",
                          "typeString": "literal_string \"Already voted on this address\""
                        }
                      ],
                      "id": 578,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2562,
                        2563
                      ],
                      "referencedDeclaration": 2563,
                      "src": "1259:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 586,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1259:68:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 587,
                  "nodeType": "ExpressionStatement",
                  "src": "1259:68:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 589,
                            "name": "voters",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 493,
                            "src": "1346:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$485_storage_$",
                              "typeString": "mapping(address => struct Voting.Voter storage ref)"
                            }
                          },
                          "id": 592,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 590,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2559,
                              "src": "1353:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 591,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1353:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1346:18:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Voter_$485_storage",
                            "typeString": "struct Voting.Voter storage ref"
                          }
                        },
                        "id": 593,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "authorized",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 480,
                        "src": "1346:29:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5761697420666f7220617574686f72697a6174696f6e",
                        "id": 594,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1378:24:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_80e46e299b96002a79167c9caa7c7fab35f11e8f3587b3953723e5b09b33c400",
                          "typeString": "literal_string \"Wait for authorization\""
                        },
                        "value": "Wait for authorization"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_80e46e299b96002a79167c9caa7c7fab35f11e8f3587b3953723e5b09b33c400",
                          "typeString": "literal_string \"Wait for authorization\""
                        }
                      ],
                      "id": 588,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2562,
                        2563
                      ],
                      "referencedDeclaration": 2563,
                      "src": "1338:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 595,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1338:65:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 596,
                  "nodeType": "ExpressionStatement",
                  "src": "1338:65:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 603,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 597,
                          "name": "voters",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 493,
                          "src": "1416:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$485_storage_$",
                            "typeString": "mapping(address => struct Voting.Voter storage ref)"
                          }
                        },
                        "id": 600,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 598,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2559,
                            "src": "1423:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 599,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1423:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1416:18:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Voter_$485_storage",
                          "typeString": "struct Voting.Voter storage ref"
                        }
                      },
                      "id": 601,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "vote",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 484,
                      "src": "1416:23:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 602,
                      "name": "_voteIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 575,
                      "src": "1442:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1416:36:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 604,
                  "nodeType": "ExpressionStatement",
                  "src": "1416:36:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 611,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 605,
                          "name": "voters",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 493,
                          "src": "1463:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$485_storage_$",
                            "typeString": "mapping(address => struct Voting.Voter storage ref)"
                          }
                        },
                        "id": 608,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 606,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2559,
                            "src": "1470:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 607,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1470:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1463:18:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Voter_$485_storage",
                          "typeString": "struct Voting.Voter storage ref"
                        }
                      },
                      "id": 609,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "voted",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 482,
                      "src": "1463:24:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 610,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1490:4:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1463:31:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 612,
                  "nodeType": "ExpressionStatement",
                  "src": "1463:31:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 618,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 613,
                          "name": "candidates",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 496,
                          "src": "1507:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Candidate_$478_storage_$dyn_storage",
                            "typeString": "struct Voting.Candidate storage ref[] storage ref"
                          }
                        },
                        "id": 615,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 614,
                          "name": "_voteIndex",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 575,
                          "src": "1518:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1507:22:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Candidate_$478_storage",
                          "typeString": "struct Voting.Candidate storage ref"
                        }
                      },
                      "id": 616,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "voteCount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 477,
                      "src": "1507:32:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 617,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1543:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "1507:37:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 619,
                  "nodeType": "ExpressionStatement",
                  "src": "1507:37:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 622,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 620,
                      "name": "totalVotes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 498,
                      "src": "1555:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 621,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1569:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "1555:15:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 623,
                  "nodeType": "ExpressionStatement",
                  "src": "1555:15:3"
                }
              ]
            },
            "documentation": null,
            "id": 625,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "vote",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 576,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 575,
                  "name": "_voteIndex",
                  "nodeType": "VariableDeclaration",
                  "scope": 625,
                  "src": "1225:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 574,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1225:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1224:17:3"
            },
            "returnParameters": {
              "id": 577,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1248:0:3"
            },
            "scope": 649,
            "src": "1211:367:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 647,
              "nodeType": "Block",
              "src": "1677:122:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 635,
                        "name": "candidatesInit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 627,
                        "src": "1704:14:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Candidate_$478_memory_ptr",
                          "typeString": "struct Voting.Candidate memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Candidate_$478_memory_ptr",
                          "typeString": "struct Voting.Candidate memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 632,
                        "name": "candidates",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 496,
                        "src": "1688:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Candidate_$478_storage_$dyn_storage",
                          "typeString": "struct Voting.Candidate storage ref[] storage ref"
                        }
                      },
                      "id": 634,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1688:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Candidate_$478_storage_$returns$_t_uint256_$",
                        "typeString": "function (struct Voting.Candidate storage ref) returns (uint256)"
                      }
                    },
                    "id": 636,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1688:31:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 637,
                  "nodeType": "ExpressionStatement",
                  "src": "1688:31:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 640,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 638,
                      "name": "electionName",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 489,
                      "src": "1730:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 639,
                      "name": "electionNameInit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 629,
                      "src": "1745:16:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1730:31:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 641,
                  "nodeType": "ExpressionStatement",
                  "src": "1730:31:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 643,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2559,
                          "src": "1780:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 644,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1780:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 642,
                      "name": "mintTo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61,
                      "src": "1773:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 645,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1773:18:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 646,
                  "nodeType": "ExpressionStatement",
                  "src": "1773:18:3"
                }
              ]
            },
            "documentation": null,
            "id": 648,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mintVoting",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 630,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 627,
                  "name": "candidatesInit",
                  "nodeType": "VariableDeclaration",
                  "scope": 648,
                  "src": "1606:31:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Candidate_$478_memory_ptr",
                    "typeString": "struct Voting.Candidate"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 626,
                    "name": "Candidate",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 478,
                    "src": "1606:9:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Candidate_$478_storage_ptr",
                      "typeString": "struct Voting.Candidate"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 629,
                  "name": "electionNameInit",
                  "nodeType": "VariableDeclaration",
                  "scope": 648,
                  "src": "1639:30:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 628,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1639:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1605:65:3"
            },
            "returnParameters": {
              "id": 631,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1677:0:3"
            },
            "scope": 649,
            "src": "1586:213:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 650,
        "src": "150:1652:3"
      }
    ],
    "src": "0:1802:3"
  },
  "legacyAST": {
    "absolutePath": "/C/Users/Patterson Thamba/Documents/Assignment_VotingSystem/contracts/Voting.sol",
    "exportedSymbols": {
      "Voting": [
        649
      ]
    },
    "id": 650,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 468,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:3"
      },
      {
        "id": 469,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "25:33:3"
      },
      {
        "absolutePath": "/C/Users/Patterson Thamba/Documents/Assignment_VotingSystem/contracts/ERC721Token.sol",
        "file": "./ERC721Token.sol",
        "id": 470,
        "nodeType": "ImportDirective",
        "scope": 650,
        "sourceUnit": 107,
        "src": "62:27:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/ownership/Ownable.sol",
        "file": "@openzeppelin/contracts/ownership/Ownable.sol",
        "id": 471,
        "nodeType": "ImportDirective",
        "scope": 650,
        "sourceUnit": 1093,
        "src": "91:55:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 472,
              "name": "ERC721Token",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 106,
              "src": "169:11:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Token_$106",
                "typeString": "contract ERC721Token"
              }
            },
            "id": 473,
            "nodeType": "InheritanceSpecifier",
            "src": "169:11:3"
          }
        ],
        "contractDependencies": [
          106,
          676,
          777,
          787,
          1092,
          1763,
          2103,
          2127,
          2300,
          2403,
          2430,
          2453
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 649,
        "linearizedBaseContracts": [
          649,
          106,
          1092,
          2127,
          2300,
          2453,
          2103,
          2430,
          1763,
          2403,
          777,
          787,
          676
        ],
        "name": "Voting",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "Voting.Candidate",
            "id": 478,
            "members": [
              {
                "constant": false,
                "id": 475,
                "name": "name",
                "nodeType": "VariableDeclaration",
                "scope": 478,
                "src": "216:11:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 474,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "216:6:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 477,
                "name": "voteCount",
                "nodeType": "VariableDeclaration",
                "scope": 478,
                "src": "238:14:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 476,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "238:4:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Candidate",
            "nodeType": "StructDefinition",
            "scope": 649,
            "src": "189:71:3",
            "visibility": "public"
          },
          {
            "canonicalName": "Voting.Voter",
            "id": 485,
            "members": [
              {
                "constant": false,
                "id": 480,
                "name": "authorized",
                "nodeType": "VariableDeclaration",
                "scope": 485,
                "src": "291:15:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 479,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "291:4:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 482,
                "name": "voted",
                "nodeType": "VariableDeclaration",
                "scope": 485,
                "src": "317:10:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 481,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "317:4:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 484,
                "name": "vote",
                "nodeType": "VariableDeclaration",
                "scope": 485,
                "src": "338:9:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 483,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "338:4:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Voter",
            "nodeType": "StructDefinition",
            "scope": 649,
            "src": "268:87:3",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 487,
            "name": "chairperson",
            "nodeType": "VariableDeclaration",
            "scope": 649,
            "src": "363:26:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 486,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "363:7:3",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 489,
            "name": "electionName",
            "nodeType": "VariableDeclaration",
            "scope": 649,
            "src": "396:26:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 488,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "396:6:3",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 493,
            "name": "voters",
            "nodeType": "VariableDeclaration",
            "scope": 649,
            "src": "431:39:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$485_storage_$",
              "typeString": "mapping(address => struct Voting.Voter)"
            },
            "typeName": {
              "id": 492,
              "keyType": {
                "id": 490,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "439:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "431:25:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$485_storage_$",
                "typeString": "mapping(address => struct Voting.Voter)"
              },
              "valueType": {
                "contractScope": null,
                "id": 491,
                "name": "Voter",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 485,
                "src": "450:5:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Voter_$485_storage_ptr",
                  "typeString": "struct Voting.Voter"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 496,
            "name": "candidates",
            "nodeType": "VariableDeclaration",
            "scope": 649,
            "src": "477:29:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_Candidate_$478_storage_$dyn_storage",
              "typeString": "struct Voting.Candidate[]"
            },
            "typeName": {
              "baseType": {
                "contractScope": null,
                "id": 494,
                "name": "Candidate",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 478,
                "src": "477:9:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Candidate_$478_storage_ptr",
                  "typeString": "struct Voting.Candidate"
                }
              },
              "id": 495,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "477:11:3",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_Candidate_$478_storage_$dyn_storage_ptr",
                "typeString": "struct Voting.Candidate[]"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 498,
            "name": "totalVotes",
            "nodeType": "VariableDeclaration",
            "scope": 649,
            "src": "513:22:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 497,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "513:4:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 513,
              "nodeType": "Block",
              "src": "645:37:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 511,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 508,
                      "name": "chairperson",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 487,
                      "src": "653:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 509,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2559,
                        "src": "667:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 510,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "667:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "653:24:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 512,
                  "nodeType": "ExpressionStatement",
                  "src": "653:24:3"
                }
              ]
            },
            "documentation": null,
            "id": 514,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "566f7465546f6b656e",
                    "id": 503,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "595:11:3",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_bc165a043d5396823178933d47872c2b3ecc8d6e28159b990ce2920f5a3a8815",
                      "typeString": "literal_string \"VoteToken\""
                    },
                    "value": "VoteToken"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "56544b",
                    "id": 504,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "608:5:3",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_a298718ad1cc360f4467871561a803a90bb66ee4a5cac04454e13da2f9a7b3c0",
                      "typeString": "literal_string \"VTK\""
                    },
                    "value": "VTK"
                  },
                  {
                    "argumentTypes": null,
                    "id": 505,
                    "name": "_proxyRegistryAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 500,
                    "src": "615:21:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 506,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 502,
                  "name": "ERC721Token",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 106,
                  "src": "583:11:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC721Token_$106_$",
                    "typeString": "type(contract ERC721Token)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "583:54:3"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 501,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 500,
                  "name": "_proxyRegistryAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 514,
                  "src": "552:29:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 499,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "552:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "551:31:3"
            },
            "returnParameters": {
              "id": 507,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "645:0:3"
            },
            "scope": 649,
            "src": "540:142:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 525,
              "nodeType": "Block",
              "src": "717:110:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 520,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 517,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2559,
                            "src": "736:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 518,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "736:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 519,
                          "name": "chairperson",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 487,
                          "src": "750:11:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "736:25:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "556e6175746f726973656420616363657373202c206f6e6c79204f776e65722063616e20616363657373",
                        "id": 521,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "762:44:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3ea688bd2f077b362cb30716fc591f3b40ca8e47c041066f70be3c506b8459bc",
                          "typeString": "literal_string \"Unautorised access , only Owner can access\""
                        },
                        "value": "Unautorised access , only Owner can access"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3ea688bd2f077b362cb30716fc591f3b40ca8e47c041066f70be3c506b8459bc",
                          "typeString": "literal_string \"Unautorised access , only Owner can access\""
                        }
                      ],
                      "id": 516,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2562,
                        2563
                      ],
                      "referencedDeclaration": 2563,
                      "src": "728:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 522,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "728:79:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 523,
                  "nodeType": "ExpressionStatement",
                  "src": "728:79:3"
                },
                {
                  "id": 524,
                  "nodeType": "PlaceholderStatement",
                  "src": "818:1:3"
                }
              ]
            },
            "documentation": null,
            "id": 526,
            "name": "_onlyChairperson",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 515,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "715:2:3"
            },
            "src": "690:137:3",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 540,
              "nodeType": "Block",
              "src": "880:74:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 534,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 531,
                      "name": "chairperson",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 487,
                      "src": "891:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 532,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2559,
                        "src": "905:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 533,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "905:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "891:24:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 535,
                  "nodeType": "ExpressionStatement",
                  "src": "891:24:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 538,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 536,
                      "name": "electionName",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 489,
                      "src": "926:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 537,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 528,
                      "src": "941:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "926:20:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 539,
                  "nodeType": "ExpressionStatement",
                  "src": "926:20:3"
                }
              ]
            },
            "documentation": null,
            "id": 541,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "Election",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 529,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 528,
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 541,
                  "src": "853:19:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 527,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "853:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "852:21:3"
            },
            "returnParameters": {
              "id": 530,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "880:0:3"
            },
            "scope": 649,
            "src": "835:119:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 557,
              "nodeType": "Block",
              "src": "1028:56:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 552,
                            "name": "_name",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 543,
                            "src": "1065:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 553,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1073:1:3",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 551,
                          "name": "Candidate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 478,
                          "src": "1055:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_Candidate_$478_storage_ptr_$",
                            "typeString": "type(struct Voting.Candidate storage pointer)"
                          }
                        },
                        "id": 554,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1055:20:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Candidate_$478_memory",
                          "typeString": "struct Voting.Candidate memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Candidate_$478_memory",
                          "typeString": "struct Voting.Candidate memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 548,
                        "name": "candidates",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 496,
                        "src": "1039:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Candidate_$478_storage_$dyn_storage",
                          "typeString": "struct Voting.Candidate storage ref[] storage ref"
                        }
                      },
                      "id": 550,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1039:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Candidate_$478_storage_$returns$_t_uint256_$",
                        "typeString": "function (struct Voting.Candidate storage ref) returns (uint256)"
                      }
                    },
                    "id": 555,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1039:37:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 556,
                  "nodeType": "ExpressionStatement",
                  "src": "1039:37:3"
                }
              ]
            },
            "documentation": null,
            "id": 558,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 546,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 545,
                  "name": "_onlyChairperson",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 526,
                  "src": "1005:16:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1005:16:3"
              }
            ],
            "name": "addCandidate",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 544,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 543,
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 558,
                  "src": "984:19:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 542,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "984:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "983:21:3"
            },
            "returnParameters": {
              "id": 547,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1028:0:3"
            },
            "scope": 649,
            "src": "962:122:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 572,
              "nodeType": "Block",
              "src": "1151:52:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 570,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 565,
                          "name": "voters",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 493,
                          "src": "1162:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$485_storage_$",
                            "typeString": "mapping(address => struct Voting.Voter storage ref)"
                          }
                        },
                        "id": 567,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 566,
                          "name": "_person",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 560,
                          "src": "1169:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1162:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Voter_$485_storage",
                          "typeString": "struct Voting.Voter storage ref"
                        }
                      },
                      "id": 568,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "authorized",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 480,
                      "src": "1162:26:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 569,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1191:4:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1162:33:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 571,
                  "nodeType": "ExpressionStatement",
                  "src": "1162:33:3"
                }
              ]
            },
            "documentation": null,
            "id": 573,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 563,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 562,
                  "name": "_onlyChairperson",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 526,
                  "src": "1128:16:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1128:16:3"
              }
            ],
            "name": "authorize",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 561,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 560,
                  "name": "_person",
                  "nodeType": "VariableDeclaration",
                  "scope": 573,
                  "src": "1111:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 559,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1111:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1110:17:3"
            },
            "returnParameters": {
              "id": 564,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1151:0:3"
            },
            "scope": 649,
            "src": "1092:111:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 624,
              "nodeType": "Block",
              "src": "1248:330:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 584,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "1267:25:3",
                        "subExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 579,
                              "name": "voters",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 493,
                              "src": "1268:6:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$485_storage_$",
                                "typeString": "mapping(address => struct Voting.Voter storage ref)"
                              }
                            },
                            "id": 582,
                            "indexExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 580,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2559,
                                "src": "1275:3:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 581,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "1275:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1268:18:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Voter_$485_storage",
                              "typeString": "struct Voting.Voter storage ref"
                            }
                          },
                          "id": 583,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "voted",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 482,
                          "src": "1268:24:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "416c726561647920766f746564206f6e20746869732061646472657373",
                        "id": 585,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1295:31:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5c44f0eba320e1b5bee45d2cbc84c5fade25310c273cc4e7e30768bee3557ec5",
                          "typeString": "literal_string \"Already voted on this address\""
                        },
                        "value": "Already voted on this address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5c44f0eba320e1b5bee45d2cbc84c5fade25310c273cc4e7e30768bee3557ec5",
                          "typeString": "literal_string \"Already voted on this address\""
                        }
                      ],
                      "id": 578,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2562,
                        2563
                      ],
                      "referencedDeclaration": 2563,
                      "src": "1259:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 586,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1259:68:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 587,
                  "nodeType": "ExpressionStatement",
                  "src": "1259:68:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 589,
                            "name": "voters",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 493,
                            "src": "1346:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$485_storage_$",
                              "typeString": "mapping(address => struct Voting.Voter storage ref)"
                            }
                          },
                          "id": 592,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 590,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2559,
                              "src": "1353:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 591,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1353:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1346:18:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Voter_$485_storage",
                            "typeString": "struct Voting.Voter storage ref"
                          }
                        },
                        "id": 593,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "authorized",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 480,
                        "src": "1346:29:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5761697420666f7220617574686f72697a6174696f6e",
                        "id": 594,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1378:24:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_80e46e299b96002a79167c9caa7c7fab35f11e8f3587b3953723e5b09b33c400",
                          "typeString": "literal_string \"Wait for authorization\""
                        },
                        "value": "Wait for authorization"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_80e46e299b96002a79167c9caa7c7fab35f11e8f3587b3953723e5b09b33c400",
                          "typeString": "literal_string \"Wait for authorization\""
                        }
                      ],
                      "id": 588,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2562,
                        2563
                      ],
                      "referencedDeclaration": 2563,
                      "src": "1338:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 595,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1338:65:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 596,
                  "nodeType": "ExpressionStatement",
                  "src": "1338:65:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 603,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 597,
                          "name": "voters",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 493,
                          "src": "1416:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$485_storage_$",
                            "typeString": "mapping(address => struct Voting.Voter storage ref)"
                          }
                        },
                        "id": 600,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 598,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2559,
                            "src": "1423:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 599,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1423:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1416:18:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Voter_$485_storage",
                          "typeString": "struct Voting.Voter storage ref"
                        }
                      },
                      "id": 601,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "vote",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 484,
                      "src": "1416:23:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 602,
                      "name": "_voteIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 575,
                      "src": "1442:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1416:36:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 604,
                  "nodeType": "ExpressionStatement",
                  "src": "1416:36:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 611,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 605,
                          "name": "voters",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 493,
                          "src": "1463:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$485_storage_$",
                            "typeString": "mapping(address => struct Voting.Voter storage ref)"
                          }
                        },
                        "id": 608,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 606,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2559,
                            "src": "1470:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 607,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1470:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1463:18:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Voter_$485_storage",
                          "typeString": "struct Voting.Voter storage ref"
                        }
                      },
                      "id": 609,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "voted",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 482,
                      "src": "1463:24:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 610,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1490:4:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1463:31:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 612,
                  "nodeType": "ExpressionStatement",
                  "src": "1463:31:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 618,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 613,
                          "name": "candidates",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 496,
                          "src": "1507:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Candidate_$478_storage_$dyn_storage",
                            "typeString": "struct Voting.Candidate storage ref[] storage ref"
                          }
                        },
                        "id": 615,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 614,
                          "name": "_voteIndex",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 575,
                          "src": "1518:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1507:22:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Candidate_$478_storage",
                          "typeString": "struct Voting.Candidate storage ref"
                        }
                      },
                      "id": 616,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "voteCount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 477,
                      "src": "1507:32:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 617,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1543:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "1507:37:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 619,
                  "nodeType": "ExpressionStatement",
                  "src": "1507:37:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 622,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 620,
                      "name": "totalVotes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 498,
                      "src": "1555:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 621,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1569:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "1555:15:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 623,
                  "nodeType": "ExpressionStatement",
                  "src": "1555:15:3"
                }
              ]
            },
            "documentation": null,
            "id": 625,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "vote",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 576,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 575,
                  "name": "_voteIndex",
                  "nodeType": "VariableDeclaration",
                  "scope": 625,
                  "src": "1225:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 574,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1225:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1224:17:3"
            },
            "returnParameters": {
              "id": 577,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1248:0:3"
            },
            "scope": 649,
            "src": "1211:367:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 647,
              "nodeType": "Block",
              "src": "1677:122:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 635,
                        "name": "candidatesInit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 627,
                        "src": "1704:14:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Candidate_$478_memory_ptr",
                          "typeString": "struct Voting.Candidate memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Candidate_$478_memory_ptr",
                          "typeString": "struct Voting.Candidate memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 632,
                        "name": "candidates",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 496,
                        "src": "1688:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Candidate_$478_storage_$dyn_storage",
                          "typeString": "struct Voting.Candidate storage ref[] storage ref"
                        }
                      },
                      "id": 634,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1688:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Candidate_$478_storage_$returns$_t_uint256_$",
                        "typeString": "function (struct Voting.Candidate storage ref) returns (uint256)"
                      }
                    },
                    "id": 636,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1688:31:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 637,
                  "nodeType": "ExpressionStatement",
                  "src": "1688:31:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 640,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 638,
                      "name": "electionName",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 489,
                      "src": "1730:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 639,
                      "name": "electionNameInit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 629,
                      "src": "1745:16:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1730:31:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 641,
                  "nodeType": "ExpressionStatement",
                  "src": "1730:31:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 643,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2559,
                          "src": "1780:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 644,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1780:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 642,
                      "name": "mintTo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61,
                      "src": "1773:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 645,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1773:18:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 646,
                  "nodeType": "ExpressionStatement",
                  "src": "1773:18:3"
                }
              ]
            },
            "documentation": null,
            "id": 648,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mintVoting",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 630,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 627,
                  "name": "candidatesInit",
                  "nodeType": "VariableDeclaration",
                  "scope": 648,
                  "src": "1606:31:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Candidate_$478_memory_ptr",
                    "typeString": "struct Voting.Candidate"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 626,
                    "name": "Candidate",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 478,
                    "src": "1606:9:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Candidate_$478_storage_ptr",
                      "typeString": "struct Voting.Candidate"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 629,
                  "name": "electionNameInit",
                  "nodeType": "VariableDeclaration",
                  "scope": 648,
                  "src": "1639:30:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 628,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1639:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1605:65:3"
            },
            "returnParameters": {
              "id": 631,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1677:0:3"
            },
            "scope": 649,
            "src": "1586:213:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 650,
        "src": "150:1652:3"
      }
    ],
    "src": "0:1802:3"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.2.0",
  "updatedAt": "2020-06-08T21:49:55.237Z",
  "devdoc": {
    "methods": {
      "approve(address,uint256)": {
        "details": "Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.",
        "params": {
          "to": "address to be approved for the given token ID",
          "tokenId": "uint256 ID of the token to be approved"
        }
      },
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address.",
        "params": {
          "owner": "address to query the balance of"
        },
        "return": "uint256 representing the amount owned by the passed address"
      },
      "baseURI()": {
        "details": "Returns the base URI set via {_setBaseURI}. This will be automatically added as a preffix in {tokenURI} to each token's URI, when they are non-empty.    * _Available since v2.5.0._"
      },
      "getApproved(uint256)": {
        "details": "Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.",
        "params": {
          "tokenId": "uint256 ID of the token to query the approval of"
        },
        "return": "address currently approved for the given token ID"
      },
      "isApprovedForAll(address,address)": {
        "details": "Tells whether an operator is approved by a given owner.",
        "params": {
          "operator": "operator address which you want to query the approval of",
          "owner": "owner address which you want to query the approval of"
        },
        "return": "bool whether the given operator is approved by the given owner"
      },
      "isOwner()": {
        "details": "Returns true if the caller is the current owner."
      },
      "mintTo(address)": {
        "details": "Mints a token to an address with a tokenURI.",
        "params": {
          "_to": "address of the future owner of the token"
        }
      },
      "name()": {
        "details": "Gets the token name.",
        "return": "string representing the token name"
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "ownerOf(uint256)": {
        "details": "Gets the owner of the specified token ID.",
        "params": {
          "tokenId": "uint256 ID of the token to query the owner of"
        },
        "return": "address currently marked as the owner of the given token ID"
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the _msgSender() to be the owner, approved, or operator",
        "params": {
          "_data": "bytes data to send along with a safe transfer check",
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "setApprovalForAll(address,bool)": {
        "details": "Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf.",
        "params": {
          "approved": "representing the status of the approval to be set",
          "to": "operator address to set the approval"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}.     * Time complexity O(1), guaranteed to always use less than 30 000 gas."
      },
      "symbol()": {
        "details": "Gets the token symbol.",
        "return": "string representing the token symbol"
      },
      "tokenByIndex(uint256)": {
        "details": "Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens.",
        "params": {
          "index": "uint256 representing the index to be accessed of the tokens list"
        },
        "return": "uint256 token ID at the given index of the tokens list"
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "Gets the token ID at a given index of the tokens list of the requested owner.",
        "params": {
          "index": "uint256 representing the index to be accessed of the requested tokens list",
          "owner": "address owning the tokens list to be accessed"
        },
        "return": "uint256 token ID at the given index of the tokens list owned by the requested address"
      },
      "totalSupply()": {
        "details": "Gets the total amount of tokens stored by the contract.",
        "return": "uint256 representing the total amount of tokens"
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfers the ownership of a given token ID to another address. Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requires the msg.sender to be the owner, approved, or operator.",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}